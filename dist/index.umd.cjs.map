{"version":3,"file":"index.umd.cjs","sources":["../src/lib/objects/groups.ts","../src/lib/objects/items.ts","../src/lib/objects/forms.ts","../src/lib/items/input/TextItem.tsx","../src/lib/items/input/DateItem.tsx","../src/lib/items/input/NumberItem.tsx","../src/lib/items/input/index.ts","../src/lib/utilities.ts","../src/lib/items/select/SelectItem.tsx","../src/lib/items/select/index.ts","../src/lib/items/content/HtmlItem.tsx","../src/lib/items/content/index.ts","../src/lib/items/index.ts","../src/lib/item/ItemRender.tsx","../src/lib/builder/components/Canvas.tsx","../src/lib/builder/components/Properties.tsx","../src/lib/builder/components/Sidebar.tsx","../src/lib/builder/FormBuilder.tsx"],"sourcesContent":["\r\nexport class GroupInit {\r\n    constructor(\r\n        public label: string,\r\n    ) {\r\n    }\r\n}\r\nexport class Group extends GroupInit {\r\n    constructor(init: GroupInit) {\r\n        super(\r\n            init.label,\r\n        );\r\n    }\r\n}","import {Group} from \"./groups.ts\";\r\nimport React from \"react\";\r\n\r\n\r\nexport type ItemType = {\r\n    id: string;\r\n    type: string;\r\n}\r\nexport type ItemOnChangeType = (item: ItemType) => void\r\n\r\n\r\nexport interface FieldComponentProps {\r\n    config: ItemType;\r\n    onChange: (value: ItemType) => void;\r\n}\r\n\r\nexport class ItemRendererInit {\r\n    constructor(\r\n        public render: React.FC<FieldComponentProps>,\r\n        /* tslint:disable-next-line:no-any */\r\n        public validation: (item: any) => { [key: string]: string[] }\r\n    ) {\r\n    }\r\n}\r\n\r\nexport class ItemRenderer extends ItemRendererInit {\r\n    constructor(init: ItemRendererInit) {\r\n        super(\r\n            init.render,\r\n            init.validation,\r\n        );\r\n    }\r\n}\r\n\r\nexport class ItemInit {\r\n    constructor(\r\n        public form: ItemRenderer,\r\n        public settings: ItemRenderer,\r\n        public type: string,\r\n        public heading: string,\r\n        public description: string,\r\n        public hidden: boolean,\r\n        public icon: React.FunctionComponent,\r\n        public default_config: ItemType,\r\n        public group?: Group,\r\n    ) {\r\n        if (!this.group) {\r\n            this.group = new Group({\r\n                label: \"None\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport class Item extends ItemInit {\r\n    constructor(init: ItemInit) {\r\n        \r\n        super(\r\n            init.form,\r\n            init.settings,\r\n            \r\n            init.type,\r\n            init.heading,\r\n            init.description,\r\n            init.hidden,\r\n            init.icon,\r\n            init.default_config,\r\n            init.group,\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ItemRegistry {\r\n    constructor(\r\n        public items: Item[] = [],\r\n    ) {\r\n    }\r\n    \r\n    registerItem(item: Item, group?: Group): void {\r\n        if (group) {\r\n            item.group = group;\r\n        }\r\n        this.items.push(item);\r\n    }\r\n    \r\n    addRegistry(registry: ItemRegistry): void {\r\n        for (const item of registry) {\r\n            this.items.push(item);\r\n        }\r\n    }\r\n    \r\n    getByItem(item: ItemType): Item | undefined {\r\n        if (item) {\r\n            return this.items.find(it => it.type === item.type);\r\n        }\r\n        return undefined;\r\n    }\r\n    //\r\n    // getByType(type: string): Item | undefined {\r\n    //     return this.items.find(item => item.type === type);\r\n    // }\r\n    \r\n    * [Symbol.iterator]() {\r\n        for (const item of this.items) {\r\n            yield item;\r\n        }\r\n    }\r\n    \r\n    map<U>(callback: (item: Item, index: number, array: Item[]) => U): U[] {\r\n        return this.items.map((item, index, array) => callback(item, index, array));\r\n    }\r\n    \r\n}","import {useState} from \"react\";\r\nimport {ItemType} from \"./items.ts\";\r\n\r\nexport type FormType = {\r\n    id: number | null,\r\n    label: string | null,\r\n    created_at: string | null,\r\n    config: ItemType[]\r\n}\r\n\r\nexport type onFormChangeType = (form: FormType) => void;\r\nconst empty_form = {\r\n    id: null,\r\n    label: null,\r\n    created_at: null,\r\n    config: []\r\n};\r\n\r\nexport const formState = (initial_form: FormType = empty_form) => {\r\n    const [form, _setFormHandler] = useState({...{...empty_form, ...initial_form}});\r\n    return {\r\n        form,\r\n        setForm: (new_form: FormType) => {\r\n            console.log(\"formState\", \"setFormHandler\", new_form ?? empty_form);\r\n            _setFormHandler({...{...empty_form, ...new_form}});\r\n        },\r\n    };\r\n};","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type TextInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: TextInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-text\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<TextInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextInputConfig = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n        setItem(updatedData);\r\n    };\r\n    \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <InputText\r\n                    value={item.value}\r\n                    onChange={handleOnChange}\r\n                    placeholder={item.placeholder}\r\n                    className=\"w-full\"\r\n                    id={id}\r\n                ></InputText>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<TextInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: TextInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: TextInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"Text input\",\r\n    description: \"a simple box to insert a value into\",\r\n    hidden: false,\r\n    icon: ()=> {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M254 52.8C249.3 40.3 237.3 32 224 32s-25.3 8.3-30 20.8L57.8 416 32 416c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-1.8 0 18-48 159.6 0 18 48-1.8 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-25.8 0L254 52.8zM279.8 304l-111.6 0L224 155.1 279.8 304z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","// @ts-nocheck\r\nimport {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {FormEvent} from \"primereact/ts-helpers\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type DateInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n    format: string\r\n}\r\n\r\nconst itemConfig: DateInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-date\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n    format: \"yy-mm-dd\",\r\n};\r\n\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<DateInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: FormEvent<(Date | null)[]>) => {\r\n        console.log(event.value);\r\n        const updatedData: DateInputConfig = {...{...itemConfig, ...config}, value: event.value};\r\n        onChange(updatedData);\r\n        setItem(updatedData);\r\n        // console.log(event.value as Date);\r\n        \r\n    };\r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <Calendar\r\n                // value={date}\r\n                // viewDate={date}\r\n                onChange={(e) => {\r\n                    // setDate(e.value);\r\n                    console.log(e.value);\r\n                }}\r\n                dateFormat=\"yy-mm-dd\"\r\n            />\r\n            \r\n            {/* <div className=\"flex flex-column gap-2\"> */}\r\n            {/*     <div>{JSON.stringify(item)}</div> */}\r\n            {/*     <label htmlFor={id}>{item.label}</label> */}\r\n            {/*      */}\r\n            {/*     <Calendar */}\r\n            {/*         // value={item.value} */}\r\n            {/*         // viewDate={item.value} */}\r\n            {/*         onChange={handleOnChange} */}\r\n            {/*         placeholder={item.placeholder || \"\"} */}\r\n            {/*         className=\"w-full\" */}\r\n            {/*         id={id} */}\r\n            {/*         dateFormat={item.format} */}\r\n            {/*         showIcon */}\r\n            {/*     ></Calendar> */}\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<DateInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: DateInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"format\"}>Format</label>\r\n                        <InputText\r\n                            id={\"format\"}\r\n                            value={data.format || \"\"}\r\n                            name={\"format\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                        <ul>\r\n                            <li>d - day of month (no leading zero)\r\n                            </li>\r\n                            <li>dd - day of month (two digit)\r\n                            </li>\r\n                            <li>o - day of the year (no leading zeros)\r\n                            </li>\r\n                            <li>oo - day of the year (three digit)\r\n                            </li>\r\n                            <li>D - day name short\r\n                            </li>\r\n                            <li>DD - day name long\r\n                            </li>\r\n                            <li>m - month of year (no leading zero)\r\n                            </li>\r\n                            <li>mm - month of year (two digit)\r\n                            </li>\r\n                            <li>M - month name short\r\n                            </li>\r\n                            <li>MM - month name long\r\n                            </li>\r\n                            <li>y - year (two digit)\r\n                            </li>\r\n                            <li>yy - year (four digit)</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: DateInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: DateInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"Date picker input\",\r\n    description: \"a simple box to select a date\",\r\n    hidden: false,\r\n    icon: () => {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 40L64 64C28.7 64 0 92.7 0 128l0 16 0 48L0 448c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-256 0-48 0-16c0-35.3-28.7-64-64-64l-40 0 0-40c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 40L152 64l0-40zM48 192l80 0 0 56-80 0 0-56zm0 104l80 0 0 64-80 0 0-64zm128 0l96 0 0 64-96 0 0-64zm144 0l80 0 0 64-80 0 0-64zm80-48l-80 0 0-56 80 0 0 56zm0 160l0 40c0 8.8-7.2 16-16 16l-64 0 0-56 80 0zm-128 0l0 56-96 0 0-56 96 0zm-144 0l0 56-64 0c-8.8 0-16-7.2-16-16l0-40 80 0zM272 248l-96 0 0-56 96 0 0 56z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type TextNumberInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: TextNumberInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-number\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\"\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<TextNumberInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextNumberInputConfig = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <InputText\r\n                    type={\"number\"}\r\n                    value={item.value}\r\n                    onChange={handleOnChange}\r\n                    placeholder={item.placeholder || \"\"}\r\n                    className=\"w-full\"\r\n                    id={id}\r\n                ></InputText>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<TextNumberInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextNumberInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: TextNumberInputConfig) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: TextNumberInputConfig) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    heading: \"Number input\",\r\n    description: \"a simple box to insert a number value into\",\r\n    hidden: false,\r\n    icon: () => {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M0 64C0 46.3 14.3 32 32 32l256 0c11.5 0 22 6.1 27.7 16.1s5.7 22.2-.1 32.1l-224 384c-8.9 15.3-28.5 20.4-43.8 11.5s-20.4-28.5-11.5-43.8L232.3 96 32 96C14.3 96 0 81.7 0 64z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport TextItem from \"./TextItem.tsx\";\r\nimport DateTimeItem from \"./DateItem.tsx\";\r\nimport NumberItem from \"./NumberItem.tsx\";\r\n\r\nexport const InputGroup = new Group({\r\n    label: \"Inputs\",\r\n});\r\n\r\nconst items = new ItemRegistry();\r\nitems.registerItem(TextItem, InputGroup);\r\nitems.registerItem(NumberItem, InputGroup);\r\nitems.registerItem(DateTimeItem, InputGroup);\r\n\r\n\r\nexport default items;","export function clone_object<T>(obj: T): T {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Button} from \"primereact/button\";\r\nimport {Dropdown, DropdownChangeEvent} from \"primereact/dropdown\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\ntype SelectOptionType = {\r\n    value: string\r\n    label: string\r\n}\r\n\r\nexport type SelectOptionInput = ItemType & {\r\n    label: string\r\n    value: string\r\n    options: SelectOptionType[]\r\n    placeholder: string\r\n}\r\nconst itemConfig: SelectOptionInput = {\r\n    id: nanoid(),\r\n    type: \"select-select\",\r\n    label: \"\",\r\n    value: \"\",\r\n    options: [],\r\n    placeholder: \"\"\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<SelectOptionInput>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    const handleOnChange = (event: DropdownChangeEvent) => {\r\n        const updatedData: SelectOptionInput = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <Dropdown\r\n                    id={id}\r\n                    value={item.value || \"\"}\r\n                    onChange={handleOnChange}\r\n                    options={item.options}\r\n                    showClear\r\n                    placeholder={item.placeholder || \"\"}\r\n                    className={\"w-full\"}\r\n                > </Dropdown>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst SettingsEditOptionItem = ({option, onChange}: {\r\n    option: SelectOptionType,\r\n    onChange: (option: SelectOptionType | null) => void\r\n}) => {\r\n    const [data, setData] = useState<SelectOptionType>(option);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionType = {\r\n            ...{value: data.value, label: data.label},\r\n            [event.target.name]: event.target.value\r\n        };\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    useEffect(() => {\r\n        setData(option);\r\n    }, [option]);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row gap-2\">\r\n                <Button\r\n                    icon=\"pi pi-sort\"\r\n                    className=\"px-0 border-noround border-0\"\r\n                    style={{width: \"1rem\", color: \"#E1E1E1\", background: \"transparent\"}}\r\n                    severity=\"secondary\"\r\n                    size=\"small\"\r\n                />\r\n                \r\n                <div className=\"p-inputgroup flex-1\">\r\n                    \r\n                    <InputText\r\n                        id={\"value\"}\r\n                        value={data.value}\r\n                        name={\"value\"}\r\n                        onChange={handleOnChange}\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Value\"\r\n                    /> <InputText\r\n                    id={\"label\"}\r\n                    value={data.label}\r\n                    name={\"label\"}\r\n                    onChange={handleOnChange}\r\n                    className=\"flex-1\"\r\n                    placeholder=\"Label\"\r\n                />\r\n                </div>\r\n                <Button icon={\"pi pi-trash\"} onClick={() => onChange(null)}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsAddOptionItem = ({onInsert}: {\r\n    onInsert: (option: SelectOptionType) => void\r\n}) => {\r\n    const empty_data: SelectOptionType = {\r\n        value: \"\",\r\n        label: \"\"\r\n    };\r\n    const [data, setData] = useState<SelectOptionType>(empty_data);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionType = {\r\n            ...{value: data.value, label: data.label},\r\n            [event.target.name]: event.target.value\r\n        };\r\n        setData(updatedData);\r\n    };\r\n    \r\n    const onAddOption = () => {\r\n        onInsert({...{value: data.value, label: data.label}});\r\n        setData(empty_data);\r\n    };\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row gap-2\">\r\n                <div className=\"p-inputgroup flex-1\">\r\n                    <InputText\r\n                        id={\"value\"}\r\n                        value={data.value}\r\n                        name={\"value\"}\r\n                        onChange={handleOnChange}\r\n                        className=\"\"\r\n                        placeholder=\"Value\"\r\n                    /> <InputText\r\n                    id={\"label\"}\r\n                    value={data.label}\r\n                    name={\"label\"}\r\n                    onChange={handleOnChange}\r\n                    className=\"\"\r\n                    placeholder=\"Label\"\r\n                />\r\n                </div>\r\n                <Button\r\n                    icon={\"pi pi-plus\"}\r\n                    onClick={onAddOption}\r\n                />\r\n            </div>\r\n        \r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<SelectOptionInput>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionInput = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    const handleOptionsOnChange = (option: SelectOptionType | null, index: number) => {\r\n        const new_options = clone_object(data.options);\r\n        if (option) {\r\n            new_options[index] = option;\r\n        } else {\r\n            new_options.splice(index, 1);\r\n        }\r\n        console.log(index, new_options);\r\n        const new_data = {...data, options: new_options};\r\n        setData(new_data);\r\n        onChange(new_data);\r\n    };\r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const addNewOption = (option: SelectOptionType) => {\r\n        const new_options = clone_object(data.options);\r\n        new_options.push(option);\r\n        const new_data = {...data, options: new_options};\r\n        setData(new_data);\r\n        onChange(new_data);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <Accordion activeIndex={0}>\r\n                <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> <AccordionTab header=\"Options\" key=\"options\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    {data.options.map((item, index) => {\r\n                        return (<SettingsEditOptionItem\r\n                            key={`option-${index}`} option={item} onChange={(option) => {\r\n                            handleOptionsOnChange(option, index);\r\n                        }}\r\n                        />);\r\n                    })} <SettingsAddOptionItem\r\n                    key={`item-new`} onInsert={addNewOption}\r\n                />\r\n                </div>\r\n            </AccordionTab>\r\n            \r\n            </Accordion>\r\n            \r\n            \r\n            {/* <div>{JSON.stringify(config)}</div> */}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: SelectOptionInput) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: SelectOptionInput) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    heading: \"Select box\",\r\n    description: \"select from a list of items in a drop down\",\r\n    hidden: false,\r\n    icon: () => { return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M384 432c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0zm64-16c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320zM224 352c-6.7 0-13-2.8-17.6-7.7l-104-112c-6.5-7-8.2-17.2-4.4-25.9s12.5-14.4 22-14.4l208 0c9.5 0 18.2 5.7 22 14.4s2.1 18.9-4.4 25.9l-104 112c-4.5 4.9-10.9 7.7-17.6 7.7z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport SelectItem from \"./SelectItem.tsx\";\r\n\r\nexport const SelectGroup = new Group({\r\n    label: \"Selects\",\r\n});\r\nconst items = new ItemRegistry();\r\nitems.registerItem(SelectItem, SelectGroup);\r\n\r\n\r\nexport default items;","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Editor} from \"primereact/editor\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type HtmlConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: HtmlConfig = {\r\n    id: nanoid(),\r\n    type: \"content-html\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<HtmlConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n   \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                {<div dangerouslySetInnerHTML={{__html: item.value}}/>}\r\n                \r\n                {/* <Editor */}\r\n                {/*     value={item.value} */}\r\n                {/*     onChange={handleOnChange} */}\r\n                {/*     placeholder={item.placeholder} */}\r\n                {/*     className=\"w-full\" */}\r\n                {/*     id={id} */}\r\n                {/* ></Editor> */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<HtmlConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: HtmlConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    const handleEditorOnChange = (v:string) => {\r\n        const updatedData: HtmlConfig = {...data, value: v};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}>\r\n                <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                        <Editor\r\n                            value={data.value}\r\n                            name={\"value\"}\r\n                            onTextChange={(e) => handleEditorOnChange(e.htmlValue ?? \"\")}\r\n                            style={{minHeight:\"300px\"}}\r\n                            \r\n                        ></Editor>\r\n                </div>\r\n            </AccordionTab>\r\n            \r\n            </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: HtmlConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: HtmlConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"HTML Content\",\r\n    description: \"WYSIWYG editor for adding in content to the form\",\r\n    hidden: false,\r\n    icon: ()=> {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n            <path d=\"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\"/></svg>)\r\n    },\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport HtmlItem from \"./HtmlItem.tsx\";\r\n\r\nexport const ContentGroup = new Group({\r\n    label: \"Content\",\r\n});\r\n\r\nconst items = new ItemRegistry();\r\nitems.registerItem(HtmlItem, ContentGroup);\r\n\r\n\r\nexport default items;","import {ItemRegistry} from \"@/lib/objects/items.ts\";\r\nimport InputRegistery from \"./input\"\r\nimport SelectRegistry from \"./select\"\r\nimport ContentRegistry from \"./content\"\r\nconst items = new ItemRegistry();\r\nitems.addRegistry(InputRegistery);\r\nitems.addRegistry(SelectRegistry);\r\nitems.addRegistry(ContentRegistry);\r\n\r\n\r\nexport default items;","import items from \"@/lib/items\";\nimport {ItemType} from \"@/lib/objects\";\nimport React from \"react\";\n\nexport const ItemRender = ({item, onChange}: {\n    item: ItemType,\n    onChange: (item: ItemType) => void\n}) => {\n    const item_object = items.getByItem(item);\n    if (item && item_object) {\n        return React.createElement(item_object.form.render, {\n            config: item,\n            onChange: onChange\n        });\n    }\n    // component doesn't exist yet\n    return React.createElement(\n        () => <div>The component {item.type} was not found.</div>,\n    );\n};","import {FormType, ItemType, onFormChangeType} from \"@/lib/objects\";\r\nimport {ItemRender} from \"@/lib/item\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {useDroppable} from \"@dnd-kit/core\";\r\nimport {useSortable} from \"@dnd-kit/sortable\";\r\nimport {CSS} from \"@dnd-kit/utilities\";\r\nimport {Button} from \"primereact/button\";\r\nimport {ButtonGroup} from \"primereact/buttongroup\";\r\n\r\nimport {confirmDialog} from \"primereact/confirmdialog\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport function SortableItem({id, config, active, setActive, onItemChange, onItemRemove}: {\r\n    id: string,\r\n    config: ItemType,\r\n    active?: ItemType,\r\n    setActive: (item: ItemType | undefined) => void,\r\n    onItemChange: (item: ItemType) => void\r\n    onItemRemove: (id: string) => void\r\n}) {\r\n    \r\n    const {attributes, listeners, setNodeRef, setActivatorNodeRef, transform, transition} =\r\n        useSortable({\r\n            id,\r\n            data: {\r\n                id,\r\n                item: config,\r\n            },\r\n            \r\n        });\r\n    \r\n    const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n    \r\n    let className = \"sortable-item\";\r\n    if (config.id == active?.id) {\r\n        className = className + \" active\";\r\n    }\r\n    \r\n    \r\n    const confirm = () => {\r\n        confirmDialog({\r\n            message: \"Are you sure you want to remove this item?\",\r\n            header: \"Confirmation\",\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            accept: () => onItemRemove(id),\r\n            // reject: () => rejectFunc()\r\n        });\r\n    };\r\n    let editBtn = <Button size=\"small\" outlined label=\"Edit\" icon=\"pi pi-pencil\" onClick={() => setActive(config)}/>;\r\n    if (active && active.id == config.id) {\r\n        editBtn = <Button size=\"small\" outlined label=\"Done\" icon=\"pi pi-pencil\" onClick={() => setActive(undefined)}/>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div ref={setNodeRef} style={style} {...attributes} className={className}>\r\n                \r\n                <ItemRender item={config} onChange={onItemChange}/>\r\n                \r\n                <div className=\"flex flex-row align-items-center item-footer\">\r\n                    <div className=\"flex-grow-1 item-type\"> {config.type}</div>\r\n                    \r\n                    <ButtonGroup> <Button {...listeners} // @ts-ignore\r\n                        ref={setActivatorNodeRef}\r\n                        size=\"small\"\r\n                        outlined\r\n                        label=\"Order\"\r\n                        icon=\"pi pi-sort\"\r\n                    />\r\n                        \r\n                        {editBtn}\r\n                        \r\n                        <Button size=\"small\" outlined label=\"Remove\" icon=\"pi pi-trash\" onClick={confirm}/>\r\n                    </ButtonGroup>\r\n                </div>\r\n            \r\n            \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Canvas({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n    \r\n}) {\r\n    console.log(\"reloading CanvasComponent\");\r\n    const [items, setItems] = useState<ItemType[]>(form?.config ?? []);\r\n    \r\n    useEffect(() => {\r\n        if (form && form.config && form.config != items) {\r\n            console.log(\"resetting items\", form, form.config, items);\r\n            setItems(form.config ?? []);\r\n        }\r\n    }, [form]);\r\n    \r\n    \r\n    const handleItemRemove = (item_id: string) => {\r\n        \r\n        const new_form = clone_object(form);\r\n        new_form.config = new_form.config.filter(it =>\r\n            it.id != item_id\r\n        );\r\n        onFormChange(new_form);\r\n        if (activeItem && activeItem.id == item_id) {\r\n            setActiveItem(undefined);\r\n        }\r\n        \r\n    };\r\n    \r\n    const handleItemChange = (value: ItemType) => {\r\n        const new_items: ItemType[] = items.map((item: ItemType) => {\r\n            if (item.id == value.id) {\r\n                return value;\r\n            }\r\n            return item;\r\n        });\r\n        setItems(new_items);\r\n        \r\n        const new_form = clone_object<FormType>(form);\r\n        new_form.config = new_items;\r\n        onFormChange(new_form);\r\n    };\r\n    \r\n    // @ts-ignore\r\n    const {listeners, setNodeRef, transform, transition} = useDroppable({\r\n        id: \"canvas_droppable\",\r\n        data: {\r\n            parent: null,\r\n            isContainer: true,\r\n        },\r\n    });\r\n    \r\n    const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n    \r\n    return (\r\n        <div ref={setNodeRef} className=\"canvas\" style={style} {...listeners}>\r\n            {items?.map((item) => (\r\n                <SortableItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    config={item}\r\n                    active={activeItem}\r\n                    setActive={setActiveItem}\r\n                    onItemChange={handleItemChange}\r\n                    onItemRemove={handleItemRemove}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import items from \"@/lib/items\";\r\nimport {onFormChangeType} from \"@/lib/objects\";\r\nimport {FormType, ItemType, } from \"@/lib/objects\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Button} from \"primereact/button\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ItemSettings = ({item, onChange}: {\r\n    item: ItemType,\r\n    onChange: (item: ItemType) => void\r\n}) => {\r\n    const item_object = items.getByItem(item)\r\n    if (item_object) {\r\n        return React.createElement(item_object.settings.render, {\r\n            config: item,\r\n            onChange: onChange\r\n        });\r\n    }\r\n    // component doesn't exist yet\r\n    return React.createElement(\r\n        () => <div>The component {item.type} was not found.</div>,\r\n    );\r\n};\r\nexport default function Properties({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n    \r\n}) {\r\n    console.log(\"reloading PropertiesComponent\");\r\n    const [editing_form, setEditingForm] = useState(form);\r\n    const [editing_item, setEditingItem] = useState(activeItem);\r\n    \r\n    const handleFormItemChange = (value: ItemType) => {\r\n        console.log(\"handleFormItemChange\", value);\r\n        //\r\n        setEditingItem(value);\r\n        // //\r\n        const new_form = clone_object(editing_form);\r\n        new_form.config = new_form.config.map((it) => {\r\n            if (it.id == value.id) {\r\n                return value;\r\n            }\r\n            return it;\r\n        });\r\n        onFormChange(new_form);\r\n    };\r\n    const handleOnFormChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: FormType = {...editing_form, [event.target.name]: event.target.value};\r\n        console.log(updatedData);\r\n        setEditingForm(updatedData);\r\n        onFormChange(updatedData);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setActiveItem(undefined);\r\n    };\r\n    \r\n    console.log(\"activeItem\", editing_item);\r\n    \r\n    useEffect(() => {\r\n        setEditingItem(activeItem);\r\n    }, [activeItem]);\r\n    \r\n    useEffect(() => {\r\n        setEditingForm(form);\r\n    }, [form]);\r\n    \r\n    \r\n    // useEffect(() => {\r\n    //     const new_form = clone_object(form)\r\n    //     new_form.config = new_form.config.map((it: ItemType) => {\r\n    //         if (item.id == it.id) {\r\n    //             return item\r\n    //         }\r\n    //         return it\r\n    //     })\r\n    //     // onFormChange(new_form)\r\n    // }, [item]);\r\n    \r\n    \r\n    \r\n    \r\n    if (editing_item) {\r\n        const item = items.getByItem(editing_item);\r\n        \r\n        if (item){\r\n            const IconComponent = item.icon\r\n            return (\r\n                <>\r\n                    <div className=\"properties active\">\r\n                    \r\n                   \r\n                    <div className=\"item-panel-item flex align-items-center\">\r\n                        <div className=\"flex-grow-1 flex align-items-center\">\r\n                            <div className=\"item-icon mr-2\">\r\n                            <IconComponent/>\r\n                        </div>\r\n                        <div>\r\n                            <h2>{item.heading}</h2>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                         <Button onClick={handleCancel} size=\"small\" outlined={true} icon=\"pi pi-times\"/>\r\n                    </div>\r\n                    \r\n                    <ItemSettings item={editing_item} onChange={handleFormItemChange}></ItemSettings>\r\n                    \r\n                    {/* <Button onClick={handleCancel} size=\"small\" className={\"w-full\"}>Done</Button> */}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return React.createElement(\r\n            () => <div>The component {editing_item.type} was not found.</div>,\r\n        );\r\n        \r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"properties\">\r\n                    <div className=\"item-panel-item flex px-3\">\r\n                        <div>\r\n                            <h2>Form Settings</h2>\r\n                        </div>\r\n                    </div>\r\n                    <Accordion activeIndex={0}>\r\n                        <AccordionTab header=\"General\" key=\"general\">\r\n                            <div className=\"form-item flex flex-column gap-4\">\r\n                                <div className=\"flex flex-column gap-2\">\r\n                                    <label htmlFor=\"label\">Form label</label>\r\n                                    <InputText\r\n                                        onChange={handleOnFormChange}\r\n                                        name={\"label\"}\r\n                                        value={editing_form.label ?? \"\"}\r\n                                        className={\"w-full\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </AccordionTab>\r\n                    </Accordion>\r\n                </div>\r\n            </>\r\n        ); }\r\n                \r\n                \r\n                }","import items from \"@/lib/items\";\r\nimport {FormType, Item, ItemType, onFormChangeType} from \"@/lib/objects\";\r\nimport {useDraggable} from \"@dnd-kit/core\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {TabPanel, TabView} from \"primereact/tabview\";\r\nimport {useRef, useState} from \"react\";\r\n\r\nexport function SidebarField({item}: {\r\n    item: Item\r\n}) {\r\n    const IconComponent = item.icon;\r\n    return <>\r\n        <article className={\"sidebar-field\"}>\r\n            <div className=\"item-panel-item flex p-2 w-100\">\r\n                <div className=\"item-icon mr-2\">\r\n                    <IconComponent/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"item-title\">{item.heading}</div>\r\n                    <div className=\"item-text\">{item.description}</div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </>;\r\n}\r\n\r\nfunction DraggableSidebarField({item}: {\r\n    item: Item\r\n}) {\r\n    \r\n    const id = useRef(nanoid());\r\n    \r\n    const {attributes, listeners, setNodeRef} = useDraggable({\r\n        id: id.current,\r\n        data: {\r\n            item,\r\n            fromSidebar: true,\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <div ref={setNodeRef} className=\"sidebar-field\" {...attributes} {...listeners}>\r\n            \r\n            <SidebarField item={item}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Sidebar({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n}) {\r\n    const [panelIndex, setPanelIndex] = useState<number>(0);\r\n    \r\n    type paneltype = {\r\n        label: string,\r\n        items: Item[]\r\n    }\r\n    \r\n    \r\n    const items_list: { [key: string]: paneltype } = {};\r\n    items.map((item) => {\r\n        const k = item.group?.label || \"\";\r\n        if (!Object.keys(items_list).includes(k)) {\r\n            items_list[k] = {\r\n                label: item.group?.label || \"\",\r\n                items: []\r\n            };\r\n        }\r\n        items_list[k][\"items\"].push(item);\r\n    });\r\n    \r\n    const storePanelIndex = (index: number) => {\r\n        setPanelIndex(index);\r\n    };\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <TabView\r\n                activeIndex={panelIndex}\r\n                onTabChange={(e) => storePanelIndex(e.index)}\r\n                className=\"sidebar\"\r\n            >\r\n                <TabPanel header=\"Items\">\r\n                    {/* <IconField iconPosition=\"left\"> */} {/*     <InputIcon className=\"pi pi-search\"/> */} {/*     <InputText */} {/*         v-model=\"value1\" */} {/*         placeholder=\"Search\" */} {/*         className={\"w-full my-3\"} */} {/*     /> */} {/* </IconField> */}\r\n                    \r\n                    <Accordion activeIndex={0}>\r\n                        {Object.keys(items_list).map((k) => {\r\n                            return (\r\n                                <AccordionTab header={items_list[k].label} key={k}>\r\n                                    {items_list[k].items.map((item) => {\r\n                                        return (<DraggableSidebarField key={`sidebar-${item.type}`} item={item}/>);\r\n                                    })}\r\n                                </AccordionTab>\r\n                            );\r\n                        })}\r\n                    \r\n                    </Accordion>\r\n            \r\n                </TabPanel>\r\n                <TabPanel header=\"Forms\">\r\n                    forms {JSON.stringify(form)}\r\n                </TabPanel>\r\n            </TabView>\r\n        \r\n        \r\n        </>\r\n    );\r\n}","import Canvas from \"@/lib/builder/components/Canvas.tsx\";\nimport Properties from \"@/lib/builder/components/Properties.tsx\";\nimport Sidebar, {SidebarField} from \"@/lib/builder/components/Sidebar.tsx\";\nimport {ItemRender} from \"@/lib/item\";\nimport {ItemType} from \"@/lib/objects\";\nimport {formState, FormType} from \"@/lib/objects/forms.ts\";\nimport {\n    Active,\n    closestCenter,\n    DndContext,\n    DragEndEvent,\n    DragOverEvent,\n    DragOverlay,\n    DragStartEvent,\n    KeyboardSensor,\n    Over,\n    PointerSensor,\n    useSensor,\n    useSensors\n} from \"@dnd-kit/core\";\nimport {arrayMove, rectSwappingStrategy, SortableContext, sortableKeyboardCoordinates,} from \"@dnd-kit/sortable\";\nimport {nanoid} from \"nanoid\";\nimport {useEffect, useState} from \"react\";\nimport \"./styles/builder.scss\";\nimport \"primereact/resources/themes/lara-light-cyan/theme.css\";\n// import \"primereact/resources/themes/lara-dark-cyan/theme.css\";\nimport \"primereact/resources/primereact.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\n\nfunction getData(prop: Active | Over | null) {\n    return prop?.data?.current ?? {};\n}\n\nlet formloadcount = 0;\n\nexport const FormBuilder = ({config, onChange}: {\n    config?: FormType,\n    onChange: (form: FormType) => void,\n}) => {\n    formloadcount = formloadcount + 1;\n    console.log(\"******************\", formloadcount, \"******************\");\n    // this creates a new object on setForm so it should\n    const {form, setForm} = formState(config);\n    const [activeItem, setActiveItem] = useState<ItemType | undefined>(undefined);\n    \n    useEffect(() => {\n        if (config) {\n            setForm(config);\n        }\n    }, [config]);\n    \n    useEffect(() => {\n        if (form) {\n            onChange(form);\n        }\n    }, [form]);\n    \n    // ----------- DND --------------\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n    \n    const [activeSidebarField, setActiveSidebarField] = useState(); // only for fields from the sidebar\n    const [activeField, setActiveField] = useState(); // only for fields that are in the form.\n    \n    const cleanUp = () => {\n        setActiveSidebarField(undefined);\n        setActiveField(undefined);\n    };\n    \n    const handleDragStart = (e: DragStartEvent) => {\n        const {active} = e;\n        const activeData = getData(active);\n        \n        console.log(\"handleDragStart\", activeData);\n        const {item} = activeData;\n        if (activeData.fromSidebar) {\n            \n            const new_item = item.default_config;\n            new_item.id = nanoid();\n            item.id = new_item.id;\n            console.log(\"handleDragStart\", \"sidebar\", item, new_item);\n            console.log(new_item);\n            setActiveSidebarField(item);\n            setActiveItem(activeData.item);\n        } else {\n            setActiveField(activeData.item);\n        }\n        \n    };\n    \n    \n    const handleDragOver = (e: DragOverEvent) => {\n        const {active, over} = e;\n        console.log(\"over\", over);\n        const activeData = getData(active);\n        const overData = getData(over);\n        \n        if (activeData.fromSidebar) {\n            \n            console.log(\"handleDragOver\", \"fromSidebar\", activeData.item.id);\n            if (form.config.findIndex((item) => item.id === activeData.item.id) == -1) {\n                console.log(\"handleDragOver\", \"new item\", activeData.item.default_config, overData);\n                form.config.push(activeData.item.default_config);\n                const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n                const overIndex = form.config.findIndex((item) => item.id === overData.id);\n                form.config = arrayMove(form.config, itemIndex, overIndex);\n                setForm(form);\n            } else if (!over) {\n                console.log(\"handleDragOver\", \"!over\", overData);\n                form.config = form.config.filter((f) => f.id !== activeData.item.id);\n                setForm(form);\n            } else {\n                console.log(\"handleDragOver\", \"else\", overData);\n                const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n                const overIndex = form.config.findIndex((item) => item.id === overData.id);\n                console.log(\"arrayMove\", form.config, itemIndex, overIndex, overData, activeData);\n                form.config = arrayMove(form.config, itemIndex, overIndex);\n                setForm(form);\n                console.log(\"SET FORM NOW \", form.config, form.config.map((f) => f.id));\n            }\n            \n            \n        } else {\n            const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n            const overIndex = form.config.findIndex((item) => item.id === overData.id);\n            if (itemIndex != overIndex) {\n                // new_form.config = arrayMove(new_form.config, itemIndex, overIndex)\n                // console.log(\"normal sorting\", itemIndex, overIndex)\n                // setForm(new_form)\n            }\n            \n        }\n        \n        \n    };\n    \n    const handleDragEnd = (e: DragEndEvent) => {\n        const {active, over} = e;\n        \n        const activeData = getData(active);\n        const overData = getData(over);\n        console.log(\"handleDragEnd\", activeData, overData);\n        \n        \n        console.log(\"handleDragEnd\", form.config);\n        const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n        const overIndex = form.config.findIndex((item) => item.id === overData.id);\n        if (itemIndex != overIndex) {\n            form.config = arrayMove(form.config, itemIndex, overIndex);\n            console.log(\"handleDragEnd normal sorting\", itemIndex, overIndex);\n            setForm(form);\n        }\n        setActiveItem(activeData.item);\n        cleanUp();\n    };\n    \n    \n    let propertiesClassName = \"properties-area px-1\";\n    if (activeItem) {\n        propertiesClassName = propertiesClassName + \" active\";\n    }\n    \n    // const handlerOnActiveItem = (item: ItemType | undefined) => {\n    //     // console.log(\"aaaa\",item)\n    //     // if (item?.id == activeItem?.id){\n    //     //     setActiveItem(null)\n    //     // } else {\n    //     setActiveItem(item);\n    //     // }\n    //\n    // };\n    //\n    \n    const form_args = {\n        form: form,\n        onFormChange: setForm,\n        activeItem: activeItem,\n        setActiveItem: setActiveItem\n    };\n    \n    console.log(setForm);\n    if (form) {\n        return (\n            <>\n                <div className=\"form-builder\">\n                    <DndContext\n                        sensors={sensors}\n                        onDragStart={handleDragStart}\n                        onDragOver={handleDragOver}\n                        onDragEnd={handleDragEnd}\n                        collisionDetection={closestCenter}\n                        autoScroll\n                    >\n                        <div className=\"sidebar-area\">\n                            <Sidebar{...form_args}></Sidebar>\n                        </div>\n                        <div className=\"canvas-area\">\n                            <SortableContext\n                                strategy={rectSwappingStrategy}\n                                items={form.config.map((f) => f.id)}\n                            >\n                                <Canvas {...form_args}/>\n                            </SortableContext>\n                        </div>\n                        <div className=\"properties-area\">\n                           <Properties {...form_args}></Properties>\n                        </div>\n                    \n                        <DragOverlay dropAnimation={null}>\n                            {activeSidebarField ? (\n                                <SidebarField item={activeSidebarField}/>\n                            ) : null} {activeField ? <ItemRender\n                            item={activeField} onChange={() => {\n                        }}\n                        /> : null}\n                        </DragOverlay>\n                    </DndContext>\n                </div>\n               \n            </>\n        );\n    }\n    return (\n        <>\n        <div>No form config loaded</div>\n        </>\n    );\n    \n};"],"names":["GroupInit","label","Group","init","ItemRendererInit","render","validation","ItemRenderer","ItemInit","form","settings","type","heading","description","hidden","icon","default_config","group","Item","ItemRegistry","items","item","registry","it","callback","index","array","empty_form","formState","initial_form","_setFormHandler","useState","new_form","itemConfig","nanoid","FormComponent","config","onChange","setItem","useEffect","handleOnChange","event","updatedData","id","jsx","Fragment","jsxs","InputText","SettingsComponent","data","setData","Accordion","AccordionTab","TextItem","Calendar","e","DateTimeItem","NumberItem","InputGroup","clone_object","obj","Dropdown","SettingsEditOptionItem","option","Button","SettingsAddOptionItem","onInsert","empty_data","onAddOption","handleOptionsOnChange","new_options","new_data","addNewOption","SelectItem","SelectGroup","handleEditorOnChange","v","Editor","HtmlItem","ContentGroup","InputRegistery","SelectRegistry","ContentRegistry","ItemRender","item_object","React","SortableItem","active","setActive","onItemChange","onItemRemove","attributes","listeners","setNodeRef","setActivatorNodeRef","transform","transition","useSortable","style","CSS","className","confirm","confirmDialog","editBtn","ButtonGroup","Canvas","onFormChange","activeItem","setActiveItem","setItems","handleItemRemove","item_id","handleItemChange","value","new_items","useDroppable","ItemSettings","Properties","editing_form","setEditingForm","editing_item","setEditingItem","handleFormItemChange","handleOnFormChange","handleCancel","IconComponent","SidebarField","DraggableSidebarField","useRef","useDraggable","Sidebar","panelIndex","setPanelIndex","items_list","k","_a","_b","storePanelIndex","TabView","TabPanel","getData","prop","formloadcount","FormBuilder","setForm","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","activeSidebarField","setActiveSidebarField","activeField","setActiveField","cleanUp","handleDragStart","activeData","new_item","handleDragOver","over","overData","itemIndex","overIndex","arrayMove","f","handleDragEnd","form_args","DndContext","closestCenter","SortableContext","rectSwappingStrategy","DragOverlay"],"mappings":"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"}