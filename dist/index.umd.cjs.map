{"version":3,"file":"index.umd.cjs","sources":["../src/lib/CounterDemo/useLogic.ts","../src/lib/CounterDemo/Counter.tsx"],"sourcesContent":["import {useState} from 'react';\n\nconst useLogic = (initialState: number) => {\n    const [count, setCount] = useState(initialState);\n    return {\n        count,\n        incrementCount: () => setCount(count + 1),\n    };\n};\n\nexport default useLogic;\n","import type {FC} from \"react\";\n\nimport classes from \"./Counter.module.scss\";\nimport useLogic from \"./useLogic\";\n\nexport type Props = {\n    /** Set initial value */\n    initialValue?: number;\n};\n\nexport const Counter: FC<Props> = ({initialValue = 0}) => {\n    const {count, incrementCount} = useLogic(initialValue);\n    \n    return (\n        <div className={classes.counter}>\n            <h2 className={classes.header}>Counter</h2>\n            <button className={classes.button} type=\"button\" onClick={incrementCount}>\n                Increment by one\n            </button>\n            <div>\n                Total value: <strong>{count}</strong>\n            </div>\n        </div>\n    );\n};"],"names":["useLogic","initialState","count","setCount","useState","Counter","initialValue","incrementCount","jsxs","classes","jsx"],"mappings":"maAEMA,EAAYC,GAAyB,CACvC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAASH,CAAY,EACxC,MAAA,CACH,MAAAC,EACA,eAAgB,IAAMC,EAASD,EAAQ,CAAC,CAAA,CAEhD,ECEaG,EAAqB,CAAC,CAAC,aAAAC,EAAe,KAAO,CACtD,KAAM,CAAC,MAAAJ,EAAO,eAAAK,CAAc,EAAIP,EAASM,CAAY,EAErD,OACKE,EAAAA,KAAA,MAAA,CAAI,UAAWC,EAAQ,QACpB,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAA,UAAWD,EAAQ,OAAQ,SAAO,UAAA,EACtCC,EAAAA,IAAC,UAAO,UAAWD,EAAQ,OAAQ,KAAK,SAAS,QAASF,EAAgB,SAE1E,kBAAA,CAAA,SACC,MAAI,CAAA,SAAA,CAAA,gBACYG,EAAAA,IAAC,UAAQ,SAAMR,CAAA,CAAA,CAAA,EAChC,CACJ,CAAA,CAAA,CAER"}