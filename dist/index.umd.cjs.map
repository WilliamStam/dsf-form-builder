{"version":3,"file":"index.umd.cjs","sources":["../src/lib/utilities.ts","../src/lib/objects/forms.ts","../src/lib/FormBuilder/Builder.tsx"],"sourcesContent":["export function clone_object<T>(obj: T): T {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}","import {ItemType} from \"@/lib/objects/items.ts\";\r\nimport {clone_object} from \"@/lib/utilities.ts\"\r\nexport type FormType = {\r\n    id: number | null,\r\n    label: string | null,\r\n    created_at: string | null,\r\n    config: ItemType[]\r\n}\r\nimport {useState} from 'react';\r\n\r\nexport const formState = (initial_form: FormType = {\r\n    id: null,\r\n    label: null,\r\n    created_at: null,\r\n    config: []\r\n}) => {\r\n    const [form, setFormHandler] = useState(initial_form);\r\n    return {\r\n        form,\r\n        setForm: (new_form: FormType) => setFormHandler(clone_object(new_form)),\r\n    };\r\n};","import type {FC} from \"react\";\n\nimport {FormType, formState} from \"@/lib/objects/forms.ts\";\nexport type Props = {\n    /** Set initial value */\n    config?: FormType;\n};\n\nexport const Builder: FC<Props> = ({config}) => {\n    const {form, setForm} = formState(config);\n    console.log(setForm)\n    return (\n        <div>\n            {JSON.stringify(form)}\n        </div>\n    );\n    \n    \n};"],"names":["clone_object","obj","formState","initial_form","form","setFormHandler","useState","new_form","Builder","config","setForm","jsx"],"mappings":"0UAAO,SAASA,EAAgBC,EAAW,CACvC,OAAO,KAAK,MAAM,KAAK,UAAUA,CAAG,CAAC,CACzC,CCQa,MAAAC,EAAY,CAACC,EAAyB,CAC/C,GAAI,KACJ,MAAO,KACP,WAAY,KACZ,OAAQ,CAAC,CACb,IAAM,CACF,KAAM,CAACC,EAAMC,CAAc,EAAIC,WAASH,CAAY,EAC7C,MAAA,CACH,KAAAC,EACA,QAAUG,GAAuBF,EAAeL,EAAaO,CAAQ,CAAC,CAAA,CAE9E,ECbaC,EAAqB,CAAC,CAAC,OAAAC,KAAY,CAC5C,KAAM,CAAC,KAAAL,EAAM,QAAAM,CAAO,EAAIR,EAAUO,CAAM,EACxC,eAAQ,IAAIC,CAAO,EAEdC,EAAA,IAAA,MAAA,CACI,SAAK,KAAA,UAAUP,CAAI,CACxB,CAAA,CAIR"}