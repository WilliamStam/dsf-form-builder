{"version":3,"file":"index.js","sources":["../src/lib/objects/groups.ts","../src/lib/objects/items.ts","../src/lib/objects/forms.ts","../src/lib/items/input/TextItem.tsx","../src/lib/items/input/DateItem.tsx","../src/lib/items/input/NumberItem.tsx","../src/lib/items/input/index.ts","../src/lib/utilities.ts","../src/lib/items/select/SelectItem.tsx","../src/lib/items/select/index.ts","../src/lib/items/content/HtmlItem.tsx","../src/lib/items/content/index.ts","../src/lib/items/index.ts","../src/lib/item/ItemRender.tsx","../src/lib/builder/components/Canvas.tsx","../src/lib/builder/components/Properties.tsx","../src/lib/builder/components/Sidebar.tsx","../src/lib/builder/FormBuilder.tsx"],"sourcesContent":["\r\nexport class GroupInit {\r\n    constructor(\r\n        public label: string,\r\n    ) {\r\n    }\r\n}\r\nexport class Group extends GroupInit {\r\n    constructor(init: GroupInit) {\r\n        super(\r\n            init.label,\r\n        );\r\n    }\r\n}","import {Group} from \"./groups.ts\";\r\nimport React from \"react\";\r\n\r\n\r\nexport type ItemType = {\r\n    id: string;\r\n    type: string;\r\n}\r\nexport type ItemOnChangeType = (item: ItemType) => void\r\n\r\n\r\nexport interface FieldComponentProps {\r\n    config: ItemType;\r\n    onChange: (value: ItemType) => void;\r\n}\r\n\r\nexport class ItemRendererInit {\r\n    constructor(\r\n        public render: React.FC<FieldComponentProps>,\r\n        /* tslint:disable-next-line:no-any */\r\n        public validation: (item: any) => { [key: string]: string[] }\r\n    ) {\r\n    }\r\n}\r\n\r\nexport class ItemRenderer extends ItemRendererInit {\r\n    constructor(init: ItemRendererInit) {\r\n        super(\r\n            init.render,\r\n            init.validation,\r\n        );\r\n    }\r\n}\r\n\r\nexport class ItemInit {\r\n    constructor(\r\n        public form: ItemRenderer,\r\n        public settings: ItemRenderer,\r\n        public type: string,\r\n        public heading: string,\r\n        public description: string,\r\n        public hidden: boolean,\r\n        public icon: React.FunctionComponent,\r\n        public default_config: ItemType,\r\n        public group?: Group,\r\n    ) {\r\n        if (!this.group) {\r\n            this.group = new Group({\r\n                label: \"None\",\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport class Item extends ItemInit {\r\n    constructor(init: ItemInit) {\r\n        \r\n        super(\r\n            init.form,\r\n            init.settings,\r\n            \r\n            init.type,\r\n            init.heading,\r\n            init.description,\r\n            init.hidden,\r\n            init.icon,\r\n            init.default_config,\r\n            init.group,\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ItemRegistry {\r\n    constructor(\r\n        public items: Item[] = [],\r\n    ) {\r\n    }\r\n    \r\n    registerItem(item: Item, group?: Group): void {\r\n        if (group) {\r\n            item.group = group;\r\n        }\r\n        this.items.push(item);\r\n    }\r\n    \r\n    addRegistry(registry: ItemRegistry): void {\r\n        for (const item of registry) {\r\n            this.items.push(item);\r\n        }\r\n    }\r\n    \r\n    getByItem(item: ItemType): Item | undefined {\r\n        if (item) {\r\n            return this.items.find(it => it.type === item.type);\r\n        }\r\n        return undefined;\r\n    }\r\n    //\r\n    // getByType(type: string): Item | undefined {\r\n    //     return this.items.find(item => item.type === type);\r\n    // }\r\n    \r\n    * [Symbol.iterator]() {\r\n        for (const item of this.items) {\r\n            yield item;\r\n        }\r\n    }\r\n    \r\n    map<U>(callback: (item: Item, index: number, array: Item[]) => U): U[] {\r\n        return this.items.map((item, index, array) => callback(item, index, array));\r\n    }\r\n    \r\n}","import {useState} from \"react\";\r\nimport {ItemType} from \"./items.ts\";\r\n\r\nexport type FormType = {\r\n    id: number | null,\r\n    label: string | null,\r\n    created_at: string | null,\r\n    config: ItemType[]\r\n}\r\n\r\nexport type onFormChangeType = (form: FormType) => void;\r\nconst empty_form = {\r\n    id: null,\r\n    label: null,\r\n    created_at: null,\r\n    config: []\r\n};\r\n\r\nexport const formState = (initial_form: FormType = empty_form) => {\r\n    const [form, _setFormHandler] = useState({...{...empty_form, ...initial_form}});\r\n    return {\r\n        form,\r\n        setForm: (new_form: FormType) => {\r\n            console.log(\"formState\", \"setFormHandler\", new_form ?? empty_form);\r\n            _setFormHandler({...{...empty_form, ...new_form}});\r\n        },\r\n    };\r\n};","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type TextInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: TextInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-text\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<TextInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextInputConfig = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n        setItem(updatedData);\r\n    };\r\n    \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <InputText\r\n                    value={item.value}\r\n                    onChange={handleOnChange}\r\n                    placeholder={item.placeholder}\r\n                    className=\"w-full\"\r\n                    id={id}\r\n                ></InputText>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<TextInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: TextInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: TextInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"Text input\",\r\n    description: \"a simple box to insert a value into\",\r\n    hidden: false,\r\n    icon: ()=> {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M254 52.8C249.3 40.3 237.3 32 224 32s-25.3 8.3-30 20.8L57.8 416 32 416c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-1.8 0 18-48 159.6 0 18 48-1.8 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-25.8 0L254 52.8zM279.8 304l-111.6 0L224 155.1 279.8 304z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","// @ts-nocheck\r\nimport {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {FormEvent} from \"primereact/ts-helpers\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type DateInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n    format: string\r\n}\r\n\r\nconst itemConfig: DateInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-date\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n    format: \"yy-mm-dd\",\r\n};\r\n\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<DateInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: FormEvent<(Date | null)[]>) => {\r\n        console.log(event.value);\r\n        const updatedData: DateInputConfig = {...{...itemConfig, ...config}, value: event.value};\r\n        onChange(updatedData);\r\n        setItem(updatedData);\r\n        // console.log(event.value as Date);\r\n        \r\n    };\r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <Calendar\r\n                // value={date}\r\n                // viewDate={date}\r\n                onChange={(e) => {\r\n                    // setDate(e.value);\r\n                    console.log(e.value);\r\n                }}\r\n                dateFormat=\"yy-mm-dd\"\r\n            />\r\n            \r\n            {/* <div className=\"flex flex-column gap-2\"> */}\r\n            {/*     <div>{JSON.stringify(item)}</div> */}\r\n            {/*     <label htmlFor={id}>{item.label}</label> */}\r\n            {/*      */}\r\n            {/*     <Calendar */}\r\n            {/*         // value={item.value} */}\r\n            {/*         // viewDate={item.value} */}\r\n            {/*         onChange={handleOnChange} */}\r\n            {/*         placeholder={item.placeholder || \"\"} */}\r\n            {/*         className=\"w-full\" */}\r\n            {/*         id={id} */}\r\n            {/*         dateFormat={item.format} */}\r\n            {/*         showIcon */}\r\n            {/*     ></Calendar> */}\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<DateInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: DateInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"format\"}>Format</label>\r\n                        <InputText\r\n                            id={\"format\"}\r\n                            value={data.format || \"\"}\r\n                            name={\"format\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                        <ul>\r\n                            <li>d - day of month (no leading zero)\r\n                            </li>\r\n                            <li>dd - day of month (two digit)\r\n                            </li>\r\n                            <li>o - day of the year (no leading zeros)\r\n                            </li>\r\n                            <li>oo - day of the year (three digit)\r\n                            </li>\r\n                            <li>D - day name short\r\n                            </li>\r\n                            <li>DD - day name long\r\n                            </li>\r\n                            <li>m - month of year (no leading zero)\r\n                            </li>\r\n                            <li>mm - month of year (two digit)\r\n                            </li>\r\n                            <li>M - month name short\r\n                            </li>\r\n                            <li>MM - month name long\r\n                            </li>\r\n                            <li>y - year (two digit)\r\n                            </li>\r\n                            <li>yy - year (four digit)</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: DateInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: DateInputConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"Date picker input\",\r\n    description: \"a simple box to select a date\",\r\n    hidden: false,\r\n    icon: () => {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 40L64 64C28.7 64 0 92.7 0 128l0 16 0 48L0 448c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-256 0-48 0-16c0-35.3-28.7-64-64-64l-40 0 0-40c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 40L152 64l0-40zM48 192l80 0 0 56-80 0 0-56zm0 104l80 0 0 64-80 0 0-64zm128 0l96 0 0 64-96 0 0-64zm144 0l80 0 0 64-80 0 0-64zm80-48l-80 0 0-56 80 0 0 56zm0 160l0 40c0 8.8-7.2 16-16 16l-64 0 0-56 80 0zm-128 0l0 56-96 0 0-56 96 0zm-144 0l0 56-64 0c-8.8 0-16-7.2-16-16l0-40 80 0zM272 248l-96 0 0-56 96 0 0 56z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type TextNumberInputConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: TextNumberInputConfig = {\r\n    id: nanoid(),\r\n    type: \"input-number\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\"\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<TextNumberInputConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextNumberInputConfig = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <InputText\r\n                    type={\"number\"}\r\n                    value={item.value}\r\n                    onChange={handleOnChange}\r\n                    placeholder={item.placeholder || \"\"}\r\n                    className=\"w-full\"\r\n                    id={id}\r\n                ></InputText>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<TextNumberInputConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: TextNumberInputConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}> <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> </Accordion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: TextNumberInputConfig) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: TextNumberInputConfig) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    heading: \"Number input\",\r\n    description: \"a simple box to insert a number value into\",\r\n    hidden: false,\r\n    icon: () => {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M0 64C0 46.3 14.3 32 32 32l256 0c11.5 0 22 6.1 27.7 16.1s5.7 22.2-.1 32.1l-224 384c-8.9 15.3-28.5 20.4-43.8 11.5s-20.4-28.5-11.5-43.8L232.3 96 32 96C14.3 96 0 81.7 0 64z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport TextItem from \"./TextItem.tsx\";\r\nimport DateTimeItem from \"./DateItem.tsx\";\r\nimport NumberItem from \"./NumberItem.tsx\";\r\n\r\nexport const InputGroup = new Group({\r\n    label: \"Inputs\",\r\n});\r\n\r\nconst items = new ItemRegistry();\r\nitems.registerItem(TextItem, InputGroup);\r\nitems.registerItem(NumberItem, InputGroup);\r\nitems.registerItem(DateTimeItem, InputGroup);\r\n\r\n\r\nexport default items;","export function clone_object<T>(obj: T): T {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Button} from \"primereact/button\";\r\nimport {Dropdown, DropdownChangeEvent} from \"primereact/dropdown\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\ntype SelectOptionType = {\r\n    value: string\r\n    label: string\r\n}\r\n\r\nexport type SelectOptionInput = ItemType & {\r\n    label: string\r\n    value: string\r\n    options: SelectOptionType[]\r\n    placeholder: string\r\n}\r\nconst itemConfig: SelectOptionInput = {\r\n    id: nanoid(),\r\n    type: \"select-select\",\r\n    label: \"\",\r\n    value: \"\",\r\n    options: [],\r\n    placeholder: \"\"\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<SelectOptionInput>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    const handleOnChange = (event: DropdownChangeEvent) => {\r\n        const updatedData: SelectOptionInput = {...{...itemConfig, ...config}, value: event.target.value};\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                <Dropdown\r\n                    id={id}\r\n                    value={item.value || \"\"}\r\n                    onChange={handleOnChange}\r\n                    options={item.options}\r\n                    showClear\r\n                    placeholder={item.placeholder || \"\"}\r\n                    className={\"w-full\"}\r\n                > </Dropdown>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst SettingsEditOptionItem = ({option, onChange}: {\r\n    option: SelectOptionType,\r\n    onChange: (option: SelectOptionType | null) => void\r\n}) => {\r\n    const [data, setData] = useState<SelectOptionType>(option);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionType = {\r\n            ...{value: data.value, label: data.label},\r\n            [event.target.name]: event.target.value\r\n        };\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    useEffect(() => {\r\n        setData(option);\r\n    }, [option]);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row gap-2\">\r\n                <Button\r\n                    icon=\"pi pi-sort\"\r\n                    className=\"px-0 border-noround border-0\"\r\n                    style={{width: \"1rem\", color: \"#E1E1E1\", background: \"transparent\"}}\r\n                    severity=\"secondary\"\r\n                    size=\"small\"\r\n                />\r\n                \r\n                <div className=\"p-inputgroup flex-1\">\r\n                    \r\n                    <InputText\r\n                        id={\"value\"}\r\n                        value={data.value}\r\n                        name={\"value\"}\r\n                        onChange={handleOnChange}\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Value\"\r\n                    /> <InputText\r\n                    id={\"label\"}\r\n                    value={data.label}\r\n                    name={\"label\"}\r\n                    onChange={handleOnChange}\r\n                    className=\"flex-1\"\r\n                    placeholder=\"Label\"\r\n                />\r\n                </div>\r\n                <Button icon={\"pi pi-trash\"} onClick={() => onChange(null)}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsAddOptionItem = ({onInsert}: {\r\n    onInsert: (option: SelectOptionType) => void\r\n}) => {\r\n    const empty_data: SelectOptionType = {\r\n        value: \"\",\r\n        label: \"\"\r\n    };\r\n    const [data, setData] = useState<SelectOptionType>(empty_data);\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionType = {\r\n            ...{value: data.value, label: data.label},\r\n            [event.target.name]: event.target.value\r\n        };\r\n        setData(updatedData);\r\n    };\r\n    \r\n    const onAddOption = () => {\r\n        onInsert({...{value: data.value, label: data.label}});\r\n        setData(empty_data);\r\n    };\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row gap-2\">\r\n                <div className=\"p-inputgroup flex-1\">\r\n                    <InputText\r\n                        id={\"value\"}\r\n                        value={data.value}\r\n                        name={\"value\"}\r\n                        onChange={handleOnChange}\r\n                        className=\"\"\r\n                        placeholder=\"Value\"\r\n                    /> <InputText\r\n                    id={\"label\"}\r\n                    value={data.label}\r\n                    name={\"label\"}\r\n                    onChange={handleOnChange}\r\n                    className=\"\"\r\n                    placeholder=\"Label\"\r\n                />\r\n                </div>\r\n                <Button\r\n                    icon={\"pi pi-plus\"}\r\n                    onClick={onAddOption}\r\n                />\r\n            </div>\r\n        \r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<SelectOptionInput>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: SelectOptionInput = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    const handleOptionsOnChange = (option: SelectOptionType | null, index: number) => {\r\n        const new_options = clone_object(data.options);\r\n        if (option) {\r\n            new_options[index] = option;\r\n        } else {\r\n            new_options.splice(index, 1);\r\n        }\r\n        console.log(index, new_options);\r\n        const new_data = {...data, options: new_options};\r\n        setData(new_data);\r\n        onChange(new_data);\r\n    };\r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    const addNewOption = (option: SelectOptionType) => {\r\n        const new_options = clone_object(data.options);\r\n        new_options.push(option);\r\n        const new_data = {...data, options: new_options};\r\n        setData(new_data);\r\n        onChange(new_data);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <Accordion activeIndex={0}>\r\n                <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"placeholder\"}>Placeholder</label>\r\n                        <InputText\r\n                            id={\"placeholder\"}\r\n                            value={data.placeholder || \"\"}\r\n                            name={\"placeholder\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </AccordionTab> <AccordionTab header=\"Options\" key=\"options\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    {data.options.map((item, index) => {\r\n                        return (<SettingsEditOptionItem\r\n                            key={`option-${index}`} option={item} onChange={(option) => {\r\n                            handleOptionsOnChange(option, index);\r\n                        }}\r\n                        />);\r\n                    })} <SettingsAddOptionItem\r\n                    key={`item-new`} onInsert={addNewOption}\r\n                />\r\n                </div>\r\n            </AccordionTab>\r\n            \r\n            </Accordion>\r\n            \r\n            \r\n            {/* <div>{JSON.stringify(config)}</div> */}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: SelectOptionInput) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: SelectOptionInput) => {\r\n            console.log(item);\r\n            return {}\r\n        }\r\n    }),\r\n    heading: \"Select box\",\r\n    description: \"select from a list of items in a drop down\",\r\n    hidden: false,\r\n    icon: () => { return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M384 432c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0zm64-16c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320zM224 352c-6.7 0-13-2.8-17.6-7.7l-104-112c-6.5-7-8.2-17.2-4.4-25.9s12.5-14.4 22-14.4l208 0c9.5 0 18.2 5.7 22 14.4s2.1 18.9-4.4 25.9l-104 112c-4.5 4.9-10.9 7.7-17.6 7.7z\"/></svg>)},\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport SelectItem from \"./SelectItem.tsx\";\r\n\r\nexport const SelectGroup = new Group({\r\n    label: \"Selects\",\r\n});\r\nconst items = new ItemRegistry();\r\nitems.registerItem(SelectItem, SelectGroup);\r\n\r\n\r\nexport default items;","import {FieldComponentProps, Item, ItemRenderer, ItemType} from \"@/lib/objects\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Editor} from \"primereact/editor\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nexport type HtmlConfig = ItemType & {\r\n    label: string\r\n    value: string\r\n    placeholder: string\r\n}\r\n\r\nconst itemConfig: HtmlConfig = {\r\n    id: nanoid(),\r\n    type: \"content-html\",\r\n    label: \"\",\r\n    value: \"\",\r\n    placeholder: \"\",\r\n};\r\n\r\nconst FormComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [item, setItem] = useState<HtmlConfig>({...itemConfig, ...config});\r\n    useEffect(() => {\r\n        setItem({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n   \r\n    \r\n    const id = Math.random().toString(36).substring(2, 15);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex flex-column gap-2\">\r\n                <label htmlFor={id}>{item.label}</label>\r\n                {<div dangerouslySetInnerHTML={{__html: item.value}}/>}\r\n                \r\n                {/* <Editor */}\r\n                {/*     value={item.value} */}\r\n                {/*     onChange={handleOnChange} */}\r\n                {/*     placeholder={item.placeholder} */}\r\n                {/*     className=\"w-full\" */}\r\n                {/*     id={id} */}\r\n                {/* ></Editor> */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nconst SettingsComponent: React.FC<FieldComponentProps> = ({config, onChange}) => {\r\n    const [data, setData] = useState<HtmlConfig>({...itemConfig, ...config});\r\n    \r\n    const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: HtmlConfig = {...data, [event.target.name]: event.target.value};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    const handleEditorOnChange = (v:string) => {\r\n        const updatedData: HtmlConfig = {...data, value: v};\r\n        setData(updatedData);\r\n        onChange(updatedData);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        setData({...itemConfig, ...config});\r\n    }, [config]);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Accordion activeIndex={0}>\r\n                <AccordionTab header=\"General\" key=\"general\">\r\n                <div className=\"form-item flex flex-column gap-4\">\r\n                    \r\n                    <div className=\"flex flex-column gap-2\">\r\n                        <label htmlFor={\"label\"}>Label</label>\r\n                        <InputText\r\n                            id={\"label\"}\r\n                            value={data.label || \"\"}\r\n                            name={\"label\"}\r\n                            onChange={handleOnChange}\r\n                            className=\"w-full\"\r\n                        />\r\n                    </div>\r\n                        <Editor\r\n                            value={data.value}\r\n                            name={\"value\"}\r\n                            onTextChange={(e) => handleEditorOnChange(e.htmlValue ?? \"\")}\r\n                            style={{minHeight:\"300px\"}}\r\n                            \r\n                        ></Editor>\r\n                </div>\r\n            </AccordionTab>\r\n            \r\n            </Accordion>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default new Item({\r\n    type: itemConfig.type,\r\n    form: new ItemRenderer({\r\n        render: FormComponent,\r\n        validation: (item: HtmlConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    settings: new ItemRenderer({\r\n        render: SettingsComponent,\r\n        validation: (item: HtmlConfig) => {\r\n            console.log(item);\r\n            return {};\r\n        }\r\n    }),\r\n    heading: \"HTML Content\",\r\n    description: \"WYSIWYG editor for adding in content to the form\",\r\n    hidden: false,\r\n    icon: ()=> {\r\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\r\n            <path d=\"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\"/></svg>)\r\n    },\r\n    default_config: itemConfig\r\n});","import {Group, ItemRegistry} from \"@/lib/objects\";\r\n\r\nimport HtmlItem from \"./HtmlItem.tsx\";\r\n\r\nexport const ContentGroup = new Group({\r\n    label: \"Content\",\r\n});\r\n\r\nconst items = new ItemRegistry();\r\nitems.registerItem(HtmlItem, ContentGroup);\r\n\r\n\r\nexport default items;","import {ItemRegistry} from \"@/lib/objects/items.ts\";\r\nimport InputRegistery from \"./input\"\r\nimport SelectRegistry from \"./select\"\r\nimport ContentRegistry from \"./content\"\r\nconst items = new ItemRegistry();\r\nitems.addRegistry(InputRegistery);\r\nitems.addRegistry(SelectRegistry);\r\nitems.addRegistry(ContentRegistry);\r\n\r\n\r\nexport default items;","import items from \"@/lib/items\";\nimport {ItemType} from \"@/lib/objects\";\nimport React from \"react\";\n\nexport const ItemRender = ({item, onChange}: {\n    item: ItemType,\n    onChange: (item: ItemType) => void\n}) => {\n    const item_object = items.getByItem(item);\n    if (item && item_object) {\n        return React.createElement(item_object.form.render, {\n            config: item,\n            onChange: onChange\n        });\n    }\n    // component doesn't exist yet\n    return React.createElement(\n        () => <div>The component {item.type} was not found.</div>,\n    );\n};","import {FormType, ItemType, onFormChangeType} from \"@/lib/objects\";\r\nimport {ItemRender} from \"@/lib/item\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {useDroppable} from \"@dnd-kit/core\";\r\nimport {useSortable} from \"@dnd-kit/sortable\";\r\nimport {CSS} from \"@dnd-kit/utilities\";\r\nimport {Button} from \"primereact/button\";\r\nimport {ButtonGroup} from \"primereact/buttongroup\";\r\n\r\nimport {confirmDialog} from \"primereact/confirmdialog\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport function SortableItem({id, config, active, setActive, onItemChange, onItemRemove}: {\r\n    id: string,\r\n    config: ItemType,\r\n    active?: ItemType,\r\n    setActive: (item: ItemType | undefined) => void,\r\n    onItemChange: (item: ItemType) => void\r\n    onItemRemove: (id: string) => void\r\n}) {\r\n    \r\n    const {attributes, listeners, setNodeRef, setActivatorNodeRef, transform, transition} =\r\n        useSortable({\r\n            id,\r\n            data: {\r\n                id,\r\n                item: config,\r\n            },\r\n            \r\n        });\r\n    \r\n    const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n    \r\n    let className = \"sortable-item\";\r\n    if (config.id == active?.id) {\r\n        className = className + \" active\";\r\n    }\r\n    \r\n    \r\n    const confirm = () => {\r\n        confirmDialog({\r\n            message: \"Are you sure you want to remove this item?\",\r\n            header: \"Confirmation\",\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            accept: () => onItemRemove(id),\r\n            // reject: () => rejectFunc()\r\n        });\r\n    };\r\n    let editBtn = <Button size=\"small\" outlined label=\"Edit\" icon=\"pi pi-pencil\" onClick={() => setActive(config)}/>;\r\n    if (active && active.id == config.id) {\r\n        editBtn = <Button size=\"small\" outlined label=\"Done\" icon=\"pi pi-pencil\" onClick={() => setActive(undefined)}/>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div ref={setNodeRef} style={style} {...attributes} className={className}>\r\n                \r\n                <ItemRender item={config} onChange={onItemChange}/>\r\n                \r\n                <div className=\"flex flex-row align-items-center item-footer\">\r\n                    <div className=\"flex-grow-1 item-type\"> {config.type}</div>\r\n                    \r\n                    <ButtonGroup> <Button {...listeners} // @ts-ignore\r\n                        ref={setActivatorNodeRef}\r\n                        size=\"small\"\r\n                        outlined\r\n                        label=\"Order\"\r\n                        icon=\"pi pi-sort\"\r\n                    />\r\n                        \r\n                        {editBtn}\r\n                        \r\n                        <Button size=\"small\" outlined label=\"Remove\" icon=\"pi pi-trash\" onClick={confirm}/>\r\n                    </ButtonGroup>\r\n                </div>\r\n            \r\n            \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Canvas({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n    \r\n}) {\r\n    console.log(\"reloading CanvasComponent\");\r\n    const [items, setItems] = useState<ItemType[]>(form?.config ?? []);\r\n    \r\n    useEffect(() => {\r\n        if (form && form.config && form.config != items) {\r\n            console.log(\"resetting items\", form, form.config, items);\r\n            setItems(form.config ?? []);\r\n        }\r\n    }, [form]);\r\n    \r\n    \r\n    const handleItemRemove = (item_id: string) => {\r\n        \r\n        const new_form = clone_object(form);\r\n        new_form.config = new_form.config.filter(it =>\r\n            it.id != item_id\r\n        );\r\n        onFormChange(new_form);\r\n        if (activeItem && activeItem.id == item_id) {\r\n            setActiveItem(undefined);\r\n        }\r\n        \r\n    };\r\n    \r\n    const handleItemChange = (value: ItemType) => {\r\n        const new_items: ItemType[] = items.map((item: ItemType) => {\r\n            if (item.id == value.id) {\r\n                return value;\r\n            }\r\n            return item;\r\n        });\r\n        setItems(new_items);\r\n        \r\n        const new_form = clone_object<FormType>(form);\r\n        new_form.config = new_items;\r\n        onFormChange(new_form);\r\n    };\r\n    \r\n    // @ts-ignore\r\n    const {listeners, setNodeRef, transform, transition} = useDroppable({\r\n        id: \"canvas_droppable\",\r\n        data: {\r\n            parent: null,\r\n            isContainer: true,\r\n        },\r\n    });\r\n    \r\n    const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    };\r\n    \r\n    return (\r\n        <div ref={setNodeRef} className=\"canvas\" style={style} {...listeners}>\r\n            {items?.map((item) => (\r\n                <SortableItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    config={item}\r\n                    active={activeItem}\r\n                    setActive={setActiveItem}\r\n                    onItemChange={handleItemChange}\r\n                    onItemRemove={handleItemRemove}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import items from \"@/lib/items\";\r\nimport {onFormChangeType} from \"@/lib/objects\";\r\nimport {FormType, ItemType, } from \"@/lib/objects\";\r\nimport {clone_object} from \"@/lib/utilities.ts\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {Button} from \"primereact/button\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ItemSettings = ({item, onChange}: {\r\n    item: ItemType,\r\n    onChange: (item: ItemType) => void\r\n}) => {\r\n    const item_object = items.getByItem(item)\r\n    if (item_object) {\r\n        return React.createElement(item_object.settings.render, {\r\n            config: item,\r\n            onChange: onChange\r\n        });\r\n    }\r\n    // component doesn't exist yet\r\n    return React.createElement(\r\n        () => <div>The component {item.type} was not found.</div>,\r\n    );\r\n};\r\nexport default function Properties({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n    \r\n}) {\r\n    console.log(\"reloading PropertiesComponent\");\r\n    const [editing_form, setEditingForm] = useState(form);\r\n    const [editing_item, setEditingItem] = useState(activeItem);\r\n    \r\n    const handleFormItemChange = (value: ItemType) => {\r\n        console.log(\"handleFormItemChange\", value);\r\n        //\r\n        setEditingItem(value);\r\n        // //\r\n        const new_form = clone_object(editing_form);\r\n        new_form.config = new_form.config.map((it) => {\r\n            if (it.id == value.id) {\r\n                return value;\r\n            }\r\n            return it;\r\n        });\r\n        onFormChange(new_form);\r\n    };\r\n    const handleOnFormChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedData: FormType = {...editing_form, [event.target.name]: event.target.value};\r\n        console.log(updatedData);\r\n        setEditingForm(updatedData);\r\n        onFormChange(updatedData);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setActiveItem(undefined);\r\n    };\r\n    \r\n    console.log(\"activeItem\", editing_item);\r\n    \r\n    useEffect(() => {\r\n        setEditingItem(activeItem);\r\n    }, [activeItem]);\r\n    \r\n    useEffect(() => {\r\n        setEditingForm(form);\r\n    }, [form]);\r\n    \r\n    \r\n    // useEffect(() => {\r\n    //     const new_form = clone_object(form)\r\n    //     new_form.config = new_form.config.map((it: ItemType) => {\r\n    //         if (item.id == it.id) {\r\n    //             return item\r\n    //         }\r\n    //         return it\r\n    //     })\r\n    //     // onFormChange(new_form)\r\n    // }, [item]);\r\n    \r\n    \r\n    \r\n    \r\n    if (editing_item) {\r\n        const item = items.getByItem(editing_item);\r\n        \r\n        if (item){\r\n            const IconComponent = item.icon\r\n            return (\r\n                <>\r\n                    <div className=\"properties active\">\r\n                    \r\n                   \r\n                    <div className=\"item-panel-item flex align-items-center\">\r\n                        <div className=\"flex-grow-1 flex align-items-center\">\r\n                            <div className=\"item-icon mr-2\">\r\n                            <IconComponent/>\r\n                        </div>\r\n                        <div>\r\n                            <h2>{item.heading}</h2>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                         <Button onClick={handleCancel} size=\"small\" outlined={true} icon=\"pi pi-times\"/>\r\n                    </div>\r\n                    \r\n                    <ItemSettings item={editing_item} onChange={handleFormItemChange}></ItemSettings>\r\n                    \r\n                    {/* <Button onClick={handleCancel} size=\"small\" className={\"w-full\"}>Done</Button> */}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return React.createElement(\r\n            () => <div>The component {editing_item.type} was not found.</div>,\r\n        );\r\n        \r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"properties\">\r\n                    <div className=\"item-panel-item flex px-3\">\r\n                        <div>\r\n                            <h2>Form Settings</h2>\r\n                        </div>\r\n                    </div>\r\n                    <Accordion activeIndex={0}>\r\n                        <AccordionTab header=\"General\" key=\"general\">\r\n                            <div className=\"form-item flex flex-column gap-4\">\r\n                                <div className=\"flex flex-column gap-2\">\r\n                                    <label htmlFor=\"label\">Form label</label>\r\n                                    <InputText\r\n                                        onChange={handleOnFormChange}\r\n                                        name={\"label\"}\r\n                                        value={editing_form.label ?? \"\"}\r\n                                        className={\"w-full\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </AccordionTab>\r\n                    </Accordion>\r\n                </div>\r\n            </>\r\n        ); }\r\n                \r\n                \r\n                }","import items from \"@/lib/items\";\r\nimport {FormType, Item, ItemType, onFormChangeType} from \"@/lib/objects\";\r\nimport {useDraggable} from \"@dnd-kit/core\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {Accordion, AccordionTab} from \"primereact/accordion\";\r\nimport {TabPanel, TabView} from \"primereact/tabview\";\r\nimport {useRef, useState} from \"react\";\r\n\r\nexport function SidebarField({item}: {\r\n    item: Item\r\n}) {\r\n    const IconComponent = item.icon;\r\n    return <>\r\n        <article className={\"sidebar-field\"}>\r\n            <div className=\"item-panel-item flex p-2 w-100\">\r\n                <div className=\"item-icon mr-2\">\r\n                    <IconComponent/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"item-title\">{item.heading}</div>\r\n                    <div className=\"item-text\">{item.description}</div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </>;\r\n}\r\n\r\nfunction DraggableSidebarField({item}: {\r\n    item: Item\r\n}) {\r\n    \r\n    const id = useRef(nanoid());\r\n    \r\n    const {attributes, listeners, setNodeRef} = useDraggable({\r\n        id: id.current,\r\n        data: {\r\n            item,\r\n            fromSidebar: true,\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <div ref={setNodeRef} className=\"sidebar-field\" {...attributes} {...listeners}>\r\n            \r\n            <SidebarField item={item}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Sidebar({form, onFormChange, activeItem, setActiveItem}: {\r\n    form: FormType,\r\n    onFormChange: onFormChangeType,\r\n    activeItem?: ItemType,\r\n    setActiveItem: (item: ItemType | undefined) => void,\r\n}) {\r\n    const [panelIndex, setPanelIndex] = useState<number>(0);\r\n    \r\n    type paneltype = {\r\n        label: string,\r\n        items: Item[]\r\n    }\r\n    \r\n    \r\n    const items_list: { [key: string]: paneltype } = {};\r\n    items.map((item) => {\r\n        const k = item.group?.label || \"\";\r\n        if (!Object.keys(items_list).includes(k)) {\r\n            items_list[k] = {\r\n                label: item.group?.label || \"\",\r\n                items: []\r\n            };\r\n        }\r\n        items_list[k][\"items\"].push(item);\r\n    });\r\n    \r\n    const storePanelIndex = (index: number) => {\r\n        setPanelIndex(index);\r\n    };\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <TabView\r\n                activeIndex={panelIndex}\r\n                onTabChange={(e) => storePanelIndex(e.index)}\r\n                className=\"sidebar\"\r\n            >\r\n                <TabPanel header=\"Items\">\r\n                    {/* <IconField iconPosition=\"left\"> */} {/*     <InputIcon className=\"pi pi-search\"/> */} {/*     <InputText */} {/*         v-model=\"value1\" */} {/*         placeholder=\"Search\" */} {/*         className={\"w-full my-3\"} */} {/*     /> */} {/* </IconField> */}\r\n                    \r\n                    <Accordion activeIndex={0}>\r\n                        {Object.keys(items_list).map((k) => {\r\n                            return (\r\n                                <AccordionTab header={items_list[k].label} key={k}>\r\n                                    {items_list[k].items.map((item) => {\r\n                                        return (<DraggableSidebarField key={`sidebar-${item.type}`} item={item}/>);\r\n                                    })}\r\n                                </AccordionTab>\r\n                            );\r\n                        })}\r\n                    \r\n                    </Accordion>\r\n            \r\n                </TabPanel>\r\n                <TabPanel header=\"Forms\">\r\n                    forms {JSON.stringify(form)}\r\n                </TabPanel>\r\n            </TabView>\r\n        \r\n        \r\n        </>\r\n    );\r\n}","import Canvas from \"@/lib/builder/components/Canvas.tsx\";\nimport Properties from \"@/lib/builder/components/Properties.tsx\";\nimport Sidebar, {SidebarField} from \"@/lib/builder/components/Sidebar.tsx\";\nimport {ItemRender} from \"@/lib/item\";\nimport {ItemType} from \"@/lib/objects\";\nimport {formState, FormType} from \"@/lib/objects/forms.ts\";\nimport {\n    Active,\n    closestCenter,\n    DndContext,\n    DragEndEvent,\n    DragOverEvent,\n    DragOverlay,\n    DragStartEvent,\n    KeyboardSensor,\n    Over,\n    PointerSensor,\n    useSensor,\n    useSensors\n} from \"@dnd-kit/core\";\nimport {arrayMove, rectSwappingStrategy, SortableContext, sortableKeyboardCoordinates,} from \"@dnd-kit/sortable\";\nimport {nanoid} from \"nanoid\";\nimport {useEffect, useState} from \"react\";\nimport \"./styles/builder.scss\";\nimport \"primereact/resources/themes/lara-light-cyan/theme.css\";\n// import \"primereact/resources/themes/lara-dark-cyan/theme.css\";\nimport \"primereact/resources/primereact.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\n\nfunction getData(prop: Active | Over | null) {\n    return prop?.data?.current ?? {};\n}\n\nlet formloadcount = 0;\n\nexport const FormBuilder = ({config, onChange}: {\n    config?: FormType,\n    onChange: (form: FormType) => void,\n}) => {\n    formloadcount = formloadcount + 1;\n    console.log(\"******************\", formloadcount, \"******************\");\n    // this creates a new object on setForm so it should\n    const {form, setForm} = formState(config);\n    const [activeItem, setActiveItem] = useState<ItemType | undefined>(undefined);\n    \n    useEffect(() => {\n        if (config) {\n            setForm(config);\n        }\n    }, [config]);\n    \n    useEffect(() => {\n        if (form) {\n            onChange(form);\n        }\n    }, [form]);\n    \n    // ----------- DND --------------\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n    \n    const [activeSidebarField, setActiveSidebarField] = useState(); // only for fields from the sidebar\n    const [activeField, setActiveField] = useState(); // only for fields that are in the form.\n    \n    const cleanUp = () => {\n        setActiveSidebarField(undefined);\n        setActiveField(undefined);\n    };\n    \n    const handleDragStart = (e: DragStartEvent) => {\n        const {active} = e;\n        const activeData = getData(active);\n        \n        console.log(\"handleDragStart\", activeData);\n        const {item} = activeData;\n        if (activeData.fromSidebar) {\n            \n            const new_item = item.default_config;\n            new_item.id = nanoid();\n            item.id = new_item.id;\n            console.log(\"handleDragStart\", \"sidebar\", item, new_item);\n            console.log(new_item);\n            setActiveSidebarField(item);\n            setActiveItem(activeData.item);\n        } else {\n            setActiveField(activeData.item);\n        }\n        \n    };\n    \n    \n    const handleDragOver = (e: DragOverEvent) => {\n        const {active, over} = e;\n        console.log(\"over\", over);\n        const activeData = getData(active);\n        const overData = getData(over);\n        \n        if (activeData.fromSidebar) {\n            \n            console.log(\"handleDragOver\", \"fromSidebar\", activeData.item.id);\n            if (form.config.findIndex((item) => item.id === activeData.item.id) == -1) {\n                console.log(\"handleDragOver\", \"new item\", activeData.item.default_config, overData);\n                form.config.push(activeData.item.default_config);\n                const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n                const overIndex = form.config.findIndex((item) => item.id === overData.id);\n                form.config = arrayMove(form.config, itemIndex, overIndex);\n                setForm(form);\n            } else if (!over) {\n                console.log(\"handleDragOver\", \"!over\", overData);\n                form.config = form.config.filter((f) => f.id !== activeData.item.id);\n                setForm(form);\n            } else {\n                console.log(\"handleDragOver\", \"else\", overData);\n                const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n                const overIndex = form.config.findIndex((item) => item.id === overData.id);\n                console.log(\"arrayMove\", form.config, itemIndex, overIndex, overData, activeData);\n                form.config = arrayMove(form.config, itemIndex, overIndex);\n                setForm(form);\n                console.log(\"SET FORM NOW \", form.config, form.config.map((f) => f.id));\n            }\n            \n            \n        } else {\n            const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n            const overIndex = form.config.findIndex((item) => item.id === overData.id);\n            if (itemIndex != overIndex) {\n                // new_form.config = arrayMove(new_form.config, itemIndex, overIndex)\n                // console.log(\"normal sorting\", itemIndex, overIndex)\n                // setForm(new_form)\n            }\n            \n        }\n        \n        \n    };\n    \n    const handleDragEnd = (e: DragEndEvent) => {\n        const {active, over} = e;\n        \n        const activeData = getData(active);\n        const overData = getData(over);\n        console.log(\"handleDragEnd\", activeData, overData);\n        \n        \n        console.log(\"handleDragEnd\", form.config);\n        const itemIndex = form.config.findIndex((item) => item.id === activeData.item.id);\n        const overIndex = form.config.findIndex((item) => item.id === overData.id);\n        if (itemIndex != overIndex) {\n            form.config = arrayMove(form.config, itemIndex, overIndex);\n            console.log(\"handleDragEnd normal sorting\", itemIndex, overIndex);\n            setForm(form);\n        }\n        setActiveItem(activeData.item);\n        cleanUp();\n    };\n    \n    \n    let propertiesClassName = \"properties-area px-1\";\n    if (activeItem) {\n        propertiesClassName = propertiesClassName + \" active\";\n    }\n    \n    // const handlerOnActiveItem = (item: ItemType | undefined) => {\n    //     // console.log(\"aaaa\",item)\n    //     // if (item?.id == activeItem?.id){\n    //     //     setActiveItem(null)\n    //     // } else {\n    //     setActiveItem(item);\n    //     // }\n    //\n    // };\n    //\n    \n    const form_args = {\n        form: form,\n        onFormChange: setForm,\n        activeItem: activeItem,\n        setActiveItem: setActiveItem\n    };\n    \n    console.log(setForm);\n    if (form) {\n        return (\n            <>\n                <div className=\"form-builder\">\n                    <DndContext\n                        sensors={sensors}\n                        onDragStart={handleDragStart}\n                        onDragOver={handleDragOver}\n                        onDragEnd={handleDragEnd}\n                        collisionDetection={closestCenter}\n                        autoScroll\n                    >\n                        <div className=\"sidebar-area\">\n                            <Sidebar{...form_args}></Sidebar>\n                        </div>\n                        <div className=\"canvas-area\">\n                            <SortableContext\n                                strategy={rectSwappingStrategy}\n                                items={form.config.map((f) => f.id)}\n                            >\n                                <Canvas {...form_args}/>\n                            </SortableContext>\n                        </div>\n                        <div className=\"properties-area\">\n                           <Properties {...form_args}></Properties>\n                        </div>\n                    \n                        <DragOverlay dropAnimation={null}>\n                            {activeSidebarField ? (\n                                <SidebarField item={activeSidebarField}/>\n                            ) : null} {activeField ? <ItemRender\n                            item={activeField} onChange={() => {\n                        }}\n                        /> : null}\n                        </DragOverlay>\n                    </DndContext>\n                </div>\n               \n            </>\n        );\n    }\n    return (\n        <>\n        <div>No form config loaded</div>\n        </>\n    );\n    \n};"],"names":["GroupInit","label","Group","init","ItemRendererInit","render","validation","ItemRenderer","ItemInit","form","settings","type","heading","description","hidden","icon","default_config","group","Item","ItemRegistry","items","item","registry","it","callback","index","array","empty_form","formState","initial_form","_setFormHandler","useState","new_form","itemConfig","nanoid","FormComponent","config","onChange","setItem","useEffect","handleOnChange","event","updatedData","id","jsx","Fragment","jsxs","InputText","SettingsComponent","data","setData","Accordion","AccordionTab","TextItem","Calendar","e","DateTimeItem","NumberItem","InputGroup","clone_object","obj","Dropdown","SettingsEditOptionItem","option","Button","SettingsAddOptionItem","onInsert","empty_data","onAddOption","handleOptionsOnChange","new_options","new_data","addNewOption","SelectItem","SelectGroup","handleEditorOnChange","v","Editor","HtmlItem","ContentGroup","InputRegistery","SelectRegistry","ContentRegistry","ItemRender","item_object","React","SortableItem","active","setActive","onItemChange","onItemRemove","attributes","listeners","setNodeRef","setActivatorNodeRef","transform","transition","useSortable","style","CSS","className","confirm","confirmDialog","editBtn","ButtonGroup","Canvas","onFormChange","activeItem","setActiveItem","setItems","handleItemRemove","item_id","handleItemChange","value","new_items","useDroppable","ItemSettings","Properties","editing_form","setEditingForm","editing_item","setEditingItem","handleFormItemChange","handleOnFormChange","handleCancel","IconComponent","SidebarField","DraggableSidebarField","useRef","useDraggable","Sidebar","panelIndex","setPanelIndex","items_list","k","_a","_b","storePanelIndex","TabView","TabPanel","getData","prop","formloadcount","FormBuilder","setForm","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","activeSidebarField","setActiveSidebarField","activeField","setActiveField","cleanUp","handleDragStart","activeData","new_item","handleDragOver","over","overData","itemIndex","overIndex","arrayMove","f","handleDragEnd","form_args","DndContext","closestCenter","SortableContext","rectSwappingStrategy","DragOverlay"],"mappings":";;;;;;;;;;;;;;;;;;;AACO,MAAMA,GAAU;AAAA,EACnB,YACWC,GACT;AADS,SAAA,QAAAA;AAAA,EAEX;AACJ;AACO,MAAMC,UAAcF,GAAU;AAAA,EACjC,YAAYG,GAAiB;AACzB;AAAA,MACIA,EAAK;AAAA,IAAA;AAAA,EAEb;AACJ;ACGO,MAAMC,GAAiB;AAAA,EAC1B,YACWC,GAEAC,GACT;AAHS,SAAA,SAAAD,GAEA,KAAA,aAAAC;AAAA,EAEX;AACJ;AAEO,MAAMC,UAAqBH,GAAiB;AAAA,EAC/C,YAAYD,GAAwB;AAChC;AAAA,MACIA,EAAK;AAAA,MACLA,EAAK;AAAA,IAAA;AAAA,EAEb;AACJ;AAEO,MAAMK,GAAS;AAAA,EAClB,YACWC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACT;AATS,SAAA,OAAAR,GACA,KAAA,WAAAC,GACA,KAAA,OAAAC,GACA,KAAA,UAAAC,GACA,KAAA,cAAAC,GACA,KAAA,SAAAC,GACA,KAAA,OAAAC,GACA,KAAA,iBAAAC,GACA,KAAA,QAAAC,GAEF,KAAK,UACD,KAAA,QAAQ,IAAIf,EAAM;AAAA,MACnB,OAAO;AAAA,IAAA,CACV;AAAA,EAET;AACJ;AAEO,MAAMgB,UAAaV,GAAS;AAAA,EAC/B,YAAYL,GAAgB;AAExB;AAAA,MACIA,EAAK;AAAA,MACLA,EAAK;AAAA,MAELA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,MACLA,EAAK;AAAA,IAAA;AAAA,EAEb;AACJ;AAGO,MAAMgB,EAAa;AAAA,EACtB,YACWC,IAAgB,IACzB;AADS,SAAA,QAAAA;AAAA,EAEX;AAAA,EAEA,aAAaC,GAAYJ,GAAqB;AAC1C,IAAIA,MACAI,EAAK,QAAQJ,IAEZ,KAAA,MAAM,KAAKI,CAAI;AAAA,EACxB;AAAA,EAEA,YAAYC,GAA8B;AACtC,eAAWD,KAAQC;AACV,WAAA,MAAM,KAAKD,CAAI;AAAA,EAE5B;AAAA,EAEA,UAAUA,GAAkC;AACxC,QAAIA;AACA,aAAO,KAAK,MAAM,KAAK,OAAME,EAAG,SAASF,EAAK,IAAI;AAAA,EAG1D;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,EAAG,OAAO,QAAQ,IAAI;AACP,eAAAA,KAAQ,KAAK;AACd,YAAAA;AAAA,EAEd;AAAA,EAEA,IAAOG,GAAgE;AAC5D,WAAA,KAAK,MAAM,IAAI,CAACH,GAAMI,GAAOC,MAAUF,EAASH,GAAMI,GAAOC,CAAK,CAAC;AAAA,EAC9E;AAEJ;ACtGA,MAAMC,IAAa;AAAA,EACf,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,QAAQ,CAAC;AACb,GAEaC,KAAY,CAACC,IAAyBF,MAAe;AAC9D,QAAM,CAAClB,GAAMqB,CAAe,IAAIC,EAAS,EAAK,GAAGJ,GAAY,GAAGE,GAAc;AACvE,SAAA;AAAA,IACH,MAAApB;AAAA,IACA,SAAS,CAACuB,MAAuB;AAC7B,cAAQ,IAAI,aAAa,kBAAkBA,KAAYL,CAAU,GACjDG,EAAA,EAAK,GAAGH,GAAY,GAAGK,GAAU;AAAA,IACrD;AAAA,EAAA;AAER,GCfMC,IAA8B;AAAA,EAChC,IAAIC,EAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AACjB,GAEMC,KAA+C,CAAC,EAAC,QAAAC,GAAQ,UAAAC,QAAc;AACnE,QAAA,CAAChB,GAAMiB,CAAO,IAAIP,EAA0B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO;AAC5E,EAAAG,EAAU,MAAM;AACZ,IAAAD,EAAQ,EAAC,GAAGL,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC;AAEL,QAAAI,IAAiB,CAACC,MAA+C;AACnE,UAAMC,IAA+B,EAAK,GAAGT,GAAY,GAAGG,GAAS,OAAOK,EAAM,OAAO,MAAK;AAC9F,IAAAJ,EAASK,CAAW,GACpBJ,EAAQI,CAAW;AAAA,EAAA,GAIjBC,IAAK,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAErD,SAEQ,gBAAAC,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,IAAA,gBAAAF,EAAC,SAAM,EAAA,SAASD,GAAK,UAAAtB,EAAK,OAAM;AAAA,IAChC,gBAAAuB;AAAA,MAACG;AAAA,MAAA;AAAA,QACG,OAAO1B,EAAK;AAAA,QACZ,UAAUmB;AAAA,QACV,aAAanB,EAAK;AAAA,QAClB,WAAU;AAAA,QACV,IAAAsB;AAAA,MAAA;AAAA,IACH;AAAA,EAAA,EACL,CAAA,EACJ,CAAA;AAER,GACMK,KAAmD,CAAC,EAAC,QAAAZ,GAAQ,UAAAC,QAAc;AACvE,QAAA,CAACY,GAAMC,CAAO,IAAInB,EAA0B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO,GAEtEI,IAAiB,CAACC,MAA+C;AAC7D,UAAAC,IAA+B,EAAC,GAAGO,GAAM,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AACjF,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA;AAIxB,SAAAH,EAAU,MAAM;AACZ,IAAAW,EAAQ,EAAC,GAAGjB,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC,GAKH,gBAAAQ,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAACK,GAAU,EAAA,aAAa,GAAG,UAAA;AAAA,IAAA;AAAA,sBAAEC,GAAa,EAAA,QAAO,WAC7C,UAAC,gBAAAN,EAAA,OAAA,EAAI,WAAU,oCAEX,UAAA;AAAA,MAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,SAAS,UAAK,SAAA;AAAA,QAC9B,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,SAAS;AAAA,YACrB,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,MACA,gBAAAM,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,eAAe,UAAW,eAAA;AAAA,QAC1C,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,eAAe;AAAA,YAC3B,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,IAAA,EACJ,CAAA,KAvB2D,SAwB/D;AAAA,IAAe;AAAA,EAAA,EAAC,CAAA,EAEpB,CAAA;AAER,GAEea,KAAA,IAAInC,EAAK;AAAA,EACpB,MAAMe,EAAW;AAAA,EACjB,MAAM,IAAI1B,EAAa;AAAA,IACnB,QAAQ4B;AAAAA,IACR,YAAY,CAACd,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,UAAU,IAAId,EAAa;AAAA,IACvB,QAAQyC;AAAAA,IACR,YAAY,CAAC3B,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM,MACM,gBAAAuB,EAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eAAc,UAAC,gBAAAA,EAAA,QAAA,EAAK,GAAE,8TAA6T,CAAA,EAAE,CAAA;AAAA,EACjZ,gBAAgBX;AACpB,CAAC,GCvGKA,IAA8B;AAAA,EAChC,IAAIC,EAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AAAA,EACb,QAAQ;AACZ,GAGMC,KAA+C,CAAC,EAAC,QAAAC,GAAQ,UAAAC,QAAc;AACnE,QAAA,CAAChB,GAAMiB,CAAO,IAAIP,EAA0B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO;AAC5E,SAAAG,EAAU,MAAM;AACZ,IAAAD,EAAQ,EAAC,GAAGL,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC,GAWA,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE,GAK7C,gBAAAQ,EAAAC,GAAA,EAAA,UAAA,gBAAAD;AAAA,IAACU;AAAA,IAAA;AAAA,MAGG,UAAU,CAACC,MAAM;AAEL,gBAAA,IAAIA,EAAE,KAAK;AAAA,MACvB;AAAA,MACA,YAAW;AAAA,IAAA;AAAA,EAkBnB,EAAA,CAAA;AAER,GACMP,KAAmD,CAAC,EAAC,QAAAZ,GAAQ,UAAAC,QAAc;AACvE,QAAA,CAACY,GAAMC,CAAO,IAAInB,EAA0B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO,GAEtEI,IAAiB,CAACC,MAA+C;AAC7D,UAAAC,IAA+B,EAAC,GAAGO,GAAM,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AACjF,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA;AAIxB,SAAAH,EAAU,MAAM;AACZ,IAAAW,EAAQ,EAAC,GAAGjB,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC,GAKH,gBAAAQ,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAACK,GAAU,EAAA,aAAa,GAAG,UAAA;AAAA,IAAA;AAAA,sBAAEC,GAAa,EAAA,QAAO,WAC7C,UAAC,gBAAAN,EAAA,OAAA,EAAI,WAAU,oCAEX,UAAA;AAAA,MAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,SAAS,UAAK,SAAA;AAAA,QAC9B,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,SAAS;AAAA,YACrB,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,MACA,gBAAAM,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,eAAe,UAAW,eAAA;AAAA,QAC1C,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,eAAe;AAAA,YAC3B,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,MACA,gBAAAM,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,UAAU,UAAM,UAAA;AAAA,QAChC,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,UAAU;AAAA,YACtB,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,0BACC,MACG,EAAA,UAAA;AAAA,UAAA,gBAAAI,EAAC,QAAG,UACJ,qCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,gCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,yCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,qCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,qBAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,qBAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,sCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,iCAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,uBAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,uBAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UACJ,uBAAA,CAAA;AAAA,UACA,gBAAAA,EAAC,QAAG,UAAsB,yBAAA,CAAA;AAAA,QAAA,GAC9B;AAAA,MAAA,GACJ;AAAA,IAAA,EACJ,CAAA,KA1D2D,SA2D/D;AAAA,IAAe;AAAA,EAAA,EAAC,CAAA,EAEpB,CAAA;AAER,GAEeY,KAAA,IAAItC,EAAK;AAAA,EACpB,MAAMe,EAAW;AAAA,EACjB,MAAM,IAAI1B,EAAa;AAAA,IACnB,QAAQ4B;AAAAA,IACR,YAAY,CAACd,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,UAAU,IAAId,EAAa;AAAA,IACvB,QAAQyC;AAAAA,IACR,YAAY,CAAC3B,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM,MACM,gBAAAuB,EAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eAAc,UAAC,gBAAAA,EAAA,QAAA,EAAK,GAAE,shBAAqhB,CAAA,EAAE,CAAA;AAAA,EACzmB,gBAAgBX;AACpB,CAAC,GCtKKA,IAAoC;AAAA,EACtC,IAAIC,EAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AACjB,GAEMC,KAA+C,CAAC,EAAC,QAAAC,GAAQ,UAAAC,QAAc;AACnE,QAAA,CAAChB,GAAMiB,CAAO,IAAIP,EAAgC,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO;AAClF,EAAAG,EAAU,MAAM;AACZ,IAAAD,EAAQ,EAAC,GAAGL,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC;AAEL,QAAAI,IAAiB,CAACC,MAA+C;AACnE,UAAMC,IAAqC,EAAK,GAAGT,GAAY,GAAGG,GAAS,OAAOK,EAAM,OAAO,MAAK;AACpG,IAAAJ,EAASK,CAAW;AAAA,EAAA,GAGlBC,IAAK,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAErD,SAEQ,gBAAAC,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,IAAA,gBAAAF,EAAC,SAAM,EAAA,SAASD,GAAK,UAAAtB,EAAK,OAAM;AAAA,IAChC,gBAAAuB;AAAA,MAACG;AAAA,MAAA;AAAA,QACG,MAAM;AAAA,QACN,OAAO1B,EAAK;AAAA,QACZ,UAAUmB;AAAA,QACV,aAAanB,EAAK,eAAe;AAAA,QACjC,WAAU;AAAA,QACV,IAAAsB;AAAA,MAAA;AAAA,IACH;AAAA,EAAA,EACL,CAAA,EACJ,CAAA;AAER,GACMK,KAAmD,CAAC,EAAC,QAAAZ,GAAQ,UAAAC,QAAc;AACvE,QAAA,CAACY,GAAMC,CAAO,IAAInB,EAAgC,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO,GAE5EI,IAAiB,CAACC,MAA+C;AAC7D,UAAAC,IAAqC,EAAC,GAAGO,GAAM,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AACvF,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA;AAIxB,SAAAH,EAAU,MAAM;AACZ,IAAAW,EAAQ,EAAC,GAAGjB,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC,GAKH,gBAAAQ,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAACK,GAAU,EAAA,aAAa,GAAG,UAAA;AAAA,IAAA;AAAA,sBAAEC,GAAa,EAAA,QAAO,WAC7C,UAAC,gBAAAN,EAAA,OAAA,EAAI,WAAU,oCAEX,UAAA;AAAA,MAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,SAAS,UAAK,SAAA;AAAA,QAC9B,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,SAAS;AAAA,YACrB,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,MACA,gBAAAM,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,eAAe,UAAW,eAAA;AAAA,QAC1C,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,eAAe;AAAA,YAC3B,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,IAAA,EACJ,CAAA,KAvB2D,SAwB/D;AAAA,IAAe;AAAA,EAAA,EAAC,CAAA,EACpB,CAAA;AAER,GAEeiB,KAAA,IAAIvC,EAAK;AAAA,EACpB,MAAMe,EAAW;AAAA,EACjB,MAAM,IAAI1B,EAAa;AAAA,IACnB,QAAQ4B;AAAAA,IACR,YAAY,CAACd,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,UAAU,IAAId,EAAa;AAAA,IACvB,QAAQyC;AAAAA,IACR,YAAY,CAAC3B,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM,MACM,gBAAAuB,EAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eAAc,UAAC,gBAAAA,EAAA,QAAA,EAAK,GAAE,4KAA2K,CAAA,EAAE,CAAA;AAAA,EAC/P,gBAAgBX;AACpB,CAAC,GC/GYyB,IAAa,IAAIxD,EAAM;AAAA,EAChC,OAAO;AACX,CAAC,GAEKkB,IAAQ,IAAID;AAClBC,EAAM,aAAaiC,IAAUK,CAAU;AACvCtC,EAAM,aAAaqC,IAAYC,CAAU;AACzCtC,EAAM,aAAaoC,IAAcE,CAAU;ACbpC,SAASC,EAAgBC,GAAW;AACvC,SAAO,KAAK,MAAM,KAAK,UAAUA,CAAG,CAAC;AACzC;ACkBA,MAAM3B,IAAgC;AAAA,EAClC,IAAIC,EAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS,CAAC;AAAA,EACV,aAAa;AACjB,GAEMC,KAA+C,CAAC,EAAC,QAAAC,GAAQ,UAAAC,QAAc;AACnE,QAAA,CAAChB,GAAMiB,CAAO,IAAIP,EAA4B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO;AAC9E,EAAAG,EAAU,MAAM;AACZ,IAAAD,EAAQ,EAAC,GAAGL,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC;AACL,QAAAI,IAAiB,CAACC,MAA+B;AACnD,UAAMC,IAAiC,EAAK,GAAGT,GAAY,GAAGG,GAAS,OAAOK,EAAM,OAAO,MAAK;AAChG,IAAAJ,EAASK,CAAW;AAAA,EAAA,GAIlBC,IAAK,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AACrD,SAEQ,gBAAAC,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,IAAA,gBAAAF,EAAC,SAAM,EAAA,SAASD,GAAK,UAAAtB,EAAK,OAAM;AAAA,IAChC,gBAAAuB;AAAA,MAACiB;AAAA,MAAA;AAAA,QACG,IAAAlB;AAAA,QACA,OAAOtB,EAAK,SAAS;AAAA,QACrB,UAAUmB;AAAA,QACV,SAASnB,EAAK;AAAA,QACd,WAAS;AAAA,QACT,aAAaA,EAAK,eAAe;AAAA,QACjC,WAAW;AAAA,QACd,UAAA;AAAA,MAAA;AAAA,IAAC;AAAA,EAAA,EACN,CAAA,EACJ,CAAA;AAER,GAEMyC,KAAyB,CAAC,EAAC,QAAAC,GAAQ,UAAA1B,QAGnC;AACF,QAAM,CAACY,GAAMC,CAAO,IAAInB,EAA2BgC,CAAM,GAEnDvB,IAAiB,CAACC,MAA+C;AACnE,UAAMC,IAAgC;AAAA,MAC9B,OAAOO,EAAK;AAAA,MAAO,OAAOA,EAAK;AAAA,MACnC,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AAAA,IAAA;AAEtC,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA;AAExB,SAAAH,EAAU,MAAM;AACZ,IAAAW,EAAQa,CAAM;AAAA,EAAA,GACf,CAACA,CAAM,CAAC,GAIH,gBAAAnB,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,uBACX,UAAA;AAAA,IAAA,gBAAAF;AAAA,MAACoB;AAAA,MAAA;AAAA,QACG,MAAK;AAAA,QACL,WAAU;AAAA,QACV,OAAO,EAAC,OAAO,QAAQ,OAAO,WAAW,YAAY,cAAa;AAAA,QAClE,UAAS;AAAA,QACT,MAAK;AAAA,MAAA;AAAA,IACT;AAAA,IAEA,gBAAAlB,EAAC,OAAI,EAAA,WAAU,uBAEX,UAAA;AAAA,MAAA,gBAAAF;AAAA,QAACG;AAAA,QAAA;AAAA,UACG,IAAI;AAAA,UACJ,OAAOE,EAAK;AAAA,UACZ,MAAM;AAAA,UACN,UAAUT;AAAA,UACV,WAAU;AAAA,UACV,aAAY;AAAA,QAAA;AAAA,MAChB;AAAA,MAAE;AAAA,MAAC,gBAAAI;AAAA,QAACG;AAAA,QAAA;AAAA,UACJ,IAAI;AAAA,UACJ,OAAOE,EAAK;AAAA,UACZ,MAAM;AAAA,UACN,UAAUT;AAAA,UACV,WAAU;AAAA,UACV,aAAY;AAAA,QAAA;AAAA,MAChB;AAAA,IAAA,GACA;AAAA,IACA,gBAAAI,EAACoB,KAAO,MAAM,eAAe,SAAS,MAAM3B,EAAS,IAAI,GAAE;AAAA,EAAA,EAC/D,CAAA,EACJ,CAAA;AAER,GACM4B,KAAwB,CAAC,EAAC,UAAAC,QAE1B;AACF,QAAMC,IAA+B;AAAA,IACjC,OAAO;AAAA,IACP,OAAO;AAAA,EAAA,GAEL,CAAClB,GAAMC,CAAO,IAAInB,EAA2BoC,CAAU,GAEvD3B,IAAiB,CAACC,MAA+C;AACnE,UAAMC,IAAgC;AAAA,MAC9B,OAAOO,EAAK;AAAA,MAAO,OAAOA,EAAK;AAAA,MACnC,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AAAA,IAAA;AAEtC,IAAAS,EAAQR,CAAW;AAAA,EAAA,GAGjB0B,IAAc,MAAM;AACb,IAAAF,EAAA,EAAK,OAAOjB,EAAK,OAAO,OAAOA,EAAK,MAAK,CAAE,GACpDC,EAAQiB,CAAU;AAAA,EAAA;AAKtB,SAEQ,gBAAAvB,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,uBACX,UAAA;AAAA,IAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,uBACX,UAAA;AAAA,MAAA,gBAAAF;AAAA,QAACG;AAAA,QAAA;AAAA,UACG,IAAI;AAAA,UACJ,OAAOE,EAAK;AAAA,UACZ,MAAM;AAAA,UACN,UAAUT;AAAA,UACV,WAAU;AAAA,UACV,aAAY;AAAA,QAAA;AAAA,MAChB;AAAA,MAAE;AAAA,MAAC,gBAAAI;AAAA,QAACG;AAAA,QAAA;AAAA,UACJ,IAAI;AAAA,UACJ,OAAOE,EAAK;AAAA,UACZ,MAAM;AAAA,UACN,UAAUT;AAAA,UACV,WAAU;AAAA,UACV,aAAY;AAAA,QAAA;AAAA,MAChB;AAAA,IAAA,GACA;AAAA,IACA,gBAAAI;AAAA,MAACoB;AAAA,MAAA;AAAA,QACG,MAAM;AAAA,QACN,SAASI;AAAA,MAAA;AAAA,IACb;AAAA,EAAA,EACJ,CAAA,EAGJ,CAAA;AAER,GAEMpB,KAAmD,CAAC,EAAC,QAAAZ,GAAQ,UAAAC,QAAc;AACvE,QAAA,CAACY,GAAMC,CAAO,IAAInB,EAA4B,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO,GAExEI,IAAiB,CAACC,MAA+C;AAC7D,UAAAC,IAAiC,EAAC,GAAGO,GAAM,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AACnF,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA,GAGlB2B,IAAwB,CAACN,GAAiCtC,MAAkB;AACxE,UAAA6C,IAAcX,EAAaV,EAAK,OAAO;AAC7C,IAAIc,IACAO,EAAY7C,CAAK,IAAIsC,IAETO,EAAA,OAAO7C,GAAO,CAAC,GAEvB,QAAA,IAAIA,GAAO6C,CAAW;AAC9B,UAAMC,IAAW,EAAC,GAAGtB,GAAM,SAASqB,EAAW;AAC/C,IAAApB,EAAQqB,CAAQ,GAChBlC,EAASkC,CAAQ;AAAA,EAAA;AAErB,EAAAhC,EAAU,MAAM;AACZ,IAAAW,EAAQ,EAAC,GAAGjB,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC;AAEL,QAAAoC,IAAe,CAACT,MAA6B;AACzC,UAAAO,IAAcX,EAAaV,EAAK,OAAO;AAC7C,IAAAqB,EAAY,KAAKP,CAAM;AACvB,UAAMQ,IAAW,EAAC,GAAGtB,GAAM,SAASqB,EAAW;AAC/C,IAAApB,EAAQqB,CAAQ,GAChBlC,EAASkC,CAAQ;AAAA,EAAA;AAGrB,SAGQ,gBAAA3B,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAACK,GAAU,EAAA,aAAa,GACpB,UAAA;AAAA,IAAA,gBAAAP,EAACQ,KAAa,QAAO,WACrB,UAAC,gBAAAN,EAAA,OAAA,EAAI,WAAU,oCAGX,UAAA;AAAA,MAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,SAAS,UAAK,SAAA;AAAA,QAC9B,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,SAAS;AAAA,YACrB,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,MACA,gBAAAM,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,eAAe,UAAW,eAAA;AAAA,QAC1C,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,IAAI;AAAA,YACJ,OAAOE,EAAK,eAAe;AAAA,YAC3B,MAAM;AAAA,YACN,UAAUT;AAAA,YACV,WAAU;AAAA,UAAA;AAAA,QACd;AAAA,MAAA,GACJ;AAAA,IAAA,EACJ,CAAA,KAxBmC,SAyBvC;AAAA,IAAe;AAAA,sBAAEY,GAAa,EAAA,QAAO,WACjC,UAAC,gBAAAN,EAAA,OAAA,EAAI,WAAU,oCACV,UAAA;AAAA,MAAAG,EAAK,QAAQ,IAAI,CAAC5B,GAAMI,MACb,gBAAAmB;AAAA,QAACkB;AAAA,QAAA;AAAA,UACmB,QAAQzC;AAAA,UAAM,UAAU,CAAC0C,MAAW;AAC5D,YAAAM,EAAsBN,GAAQtC,CAAK;AAAA,UACvC;AAAA,QAAA;AAAA,QAFS,UAAUA,CAAK;AAAA,MAAA,CAI3B;AAAA,MAAE;AAAA,MAAC,gBAAAmB;AAAA,QAACqB;AAAA,QAAA;AAAA,UACY,UAAUO;AAAA,QAAA;AAAA,QAAtB;AAAA,MACT;AAAA,IAAA,EACA,CAAA,KAX+C,SAYnD;AAAA,EAAA,EAEA,CAAA,EAIJ,CAAA;AAER,GAIeC,KAAA,IAAIvD,EAAK;AAAA,EACpB,MAAMe,EAAW;AAAA,EACjB,MAAM,IAAI1B,EAAa;AAAA,IACnB,QAAQ4B;AAAAA,IACR,YAAY,CAACd,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,UAAU,IAAId,EAAa;AAAA,IACvB,QAAQyC;AAAAA,IACR,YAAY,CAAC3B,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM,MAAgB,gBAAAuB,EAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eAAc,UAAC,gBAAAA,EAAA,QAAA,EAAK,GAAE,4YAA2Y,CAAA,EAAE,CAAA;AAAA,EACze,gBAAgBX;AACpB,CAAC,GC7QYyC,KAAc,IAAIxE,EAAM;AAAA,EACjC,OAAO;AACX,CAAC,GACKkB,KAAQ,IAAID;AAClBC,GAAM,aAAaqD,IAAYC,EAAW;ACK1C,MAAMzC,IAAyB;AAAA,EAC3B,IAAIC,EAAO;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AACjB,GAEMC,KAA+C,CAAC,EAAC,QAAAC,GAAQ,UAAAC,QAAc;AACnE,QAAA,CAAChB,GAAMiB,CAAO,IAAIP,EAAqB,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO;AACvE,EAAAG,EAAU,MAAM;AACZ,IAAAD,EAAQ,EAAC,GAAGL,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC;AAIL,QAAAO,IAAK,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAErD,SAEQ,gBAAAC,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,0BACX,UAAA;AAAA,IAAA,gBAAAF,EAAC,SAAM,EAAA,SAASD,GAAK,UAAAtB,EAAK,OAAM;AAAA,sBAC9B,OAAI,EAAA,yBAAyB,EAAC,QAAQA,EAAK,SAAO;AAAA,EAAA,EASxD,CAAA,EACJ,CAAA;AAER,GACM2B,KAAmD,CAAC,EAAC,QAAAZ,GAAQ,UAAAC,QAAc;AACvE,QAAA,CAACY,GAAMC,CAAO,IAAInB,EAAqB,EAAC,GAAGE,GAAY,GAAGG,EAAA,CAAO,GAEjEI,IAAiB,CAACC,MAA+C;AAC7D,UAAAC,IAA0B,EAAC,GAAGO,GAAM,CAACR,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AAC5E,IAAAS,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA,GAElBiC,IAAuB,CAACC,MAAa;AACvC,UAAMlC,IAA0B,EAAC,GAAGO,GAAM,OAAO2B,EAAC;AAClD,IAAA1B,EAAQR,CAAW,GACnBL,EAASK,CAAW;AAAA,EAAA;AAIxB,SAAAH,EAAU,MAAM;AACZ,IAAAW,EAAQ,EAAC,GAAGjB,GAAY,GAAGG,EAAO,CAAA;AAAA,EAAA,GACnC,CAACA,CAAM,CAAC,GAKH,gBAAAQ,EAAAC,GAAA,EAAA,UAAA,gBAAAD,EAACO,GAAU,EAAA,aAAa,GACpB,UAAA,gBAAAP,EAACQ,GAAa,EAAA,QAAO,WACrB,UAAA,gBAAAN,EAAC,OAAI,EAAA,WAAU,oCAEX,UAAA;AAAA,IAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,MAAC,gBAAAF,EAAA,SAAA,EAAM,SAAS,SAAS,UAAK,SAAA;AAAA,MAC9B,gBAAAA;AAAA,QAACG;AAAA,QAAA;AAAA,UACG,IAAI;AAAA,UACJ,OAAOE,EAAK,SAAS;AAAA,UACrB,MAAM;AAAA,UACN,UAAUT;AAAA,UACV,WAAU;AAAA,QAAA;AAAA,MACd;AAAA,IAAA,GACJ;AAAA,IACI,gBAAAI;AAAA,MAACiC;AAAA,MAAA;AAAA,QACG,OAAO5B,EAAK;AAAA,QACZ,MAAM;AAAA,QACN,cAAc,CAACM,MAAMoB,EAAqBpB,EAAE,aAAa,EAAE;AAAA,QAC3D,OAAO,EAAC,WAAU,QAAO;AAAA,MAAA;AAAA,IAE5B;AAAA,EACT,EAAA,CAAA,EAAA,GApBmC,SAqBvC,EAEA,CAAA,EAEJ,CAAA;AAER,GAEeuB,KAAA,IAAI5D,EAAK;AAAA,EACpB,MAAMe,EAAW;AAAA,EACjB,MAAM,IAAI1B,EAAa;AAAA,IACnB,QAAQ4B;AAAA,IACR,YAAY,CAACd,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,UAAU,IAAId,EAAa;AAAA,IACvB,QAAQyC;AAAA,IACR,YAAY,CAAC3B,OACT,QAAQ,IAAIA,CAAI,GACT;EACX,CACH;AAAA,EACD,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM,MACM,gBAAAuB,EAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eACpD,UAAC,gBAAAA,EAAA,QAAA,EAAK,GAAE,idAAgd,CAAA,EAAE,CAAA;AAAA,EAEle,gBAAgBX;AACpB,CAAC,GCxHY8C,KAAe,IAAI7E,EAAM;AAAA,EAClC,OAAO;AACX,CAAC,GAEKkB,KAAQ,IAAID;AAClBC,GAAM,aAAa0D,IAAUC,EAAY;ACLzC,MAAM3D,IAAQ,IAAID;AAClBC,EAAM,YAAY4D,CAAc;AAChC5D,EAAM,YAAY6D,EAAc;AAChC7D,EAAM,YAAY8D,EAAe;ACH1B,MAAMC,KAAa,CAAC,EAAC,MAAA9D,GAAM,UAAAgB,QAG5B;AACI,QAAA+C,IAAchE,EAAM,UAAUC,CAAI;AACxC,SAAIA,KAAQ+D,IACDC,EAAM,cAAcD,EAAY,KAAK,QAAQ;AAAA,IAChD,QAAQ/D;AAAA,IACR,UAAAgB;AAAA,EAAA,CACH,IAGEgD,EAAM;AAAA,IACT,wBAAO,OAAI,EAAA,UAAA;AAAA,MAAA;AAAA,MAAehE,EAAK;AAAA,MAAK;AAAA,IAAA,GAAe;AAAA,EAAA;AAE3D;ACNgB,SAAAiE,GAAa,EAAC,IAAA3C,GAAI,QAAAP,GAAQ,QAAAmD,GAAQ,WAAAC,GAAW,cAAAC,GAAc,cAAAC,KAOxE;AAEO,QAAA,EAAC,YAAAC,GAAY,WAAAC,GAAW,YAAAC,GAAY,qBAAAC,GAAqB,WAAAC,GAAW,YAAAC,MACtEC,GAAY;AAAA,IACR,IAAAtD;AAAA,IACA,MAAM;AAAA,MACF,IAAAA;AAAA,MACA,MAAMP;AAAA,IACV;AAAA,EAAA,CAEH,GAEC8D,IAAQ;AAAA,IACV,WAAWC,GAAI,UAAU,SAASJ,CAAS;AAAA,IAC3C,YAAAC;AAAA,EAAA;AAGJ,MAAII,IAAY;AACZ,EAAAhE,EAAO,OAAMmD,KAAA,gBAAAA,EAAQ,QACrBa,IAAYA,IAAY;AAI5B,QAAMC,IAAU,MAAM;AACJ,IAAAC,GAAA;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ,MAAMZ,EAAa/C,CAAE;AAAA;AAAA,IAAA,CAEhC;AAAA,EAAA;AAEL,MAAI4D,IAAU,gBAAA3D,EAACoB,GAAO,EAAA,MAAK,SAAQ,UAAQ,IAAC,OAAM,QAAO,MAAK,gBAAe,SAAS,MAAMwB,EAAUpD,CAAM,EAAE,CAAA;AAC9G,SAAImD,KAAUA,EAAO,MAAMnD,EAAO,OAC9BmE,IAAW,gBAAA3D,EAAAoB,GAAA,EAAO,MAAK,SAAQ,UAAQ,IAAC,OAAM,QAAO,MAAK,gBAAe,SAAS,MAAMwB,EAAU,MAAS,EAAE,CAAA,IAI7G,gBAAA5C,EAAAC,GAAA,EACI,4BAAC,OAAI,EAAA,KAAKgD,GAAY,OAAAK,GAAe,GAAGP,GAAY,WAAAS,GAEhD,UAAA;AAAA,IAAA,gBAAAxD,EAACuC,IAAW,EAAA,MAAM/C,GAAQ,UAAUqD,GAAa;AAAA,IAEjD,gBAAA3C,EAAC,OAAI,EAAA,WAAU,gDACX,UAAA;AAAA,MAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,yBAAwB,UAAA;AAAA,QAAA;AAAA,QAAEV,EAAO;AAAA,MAAA,GAAK;AAAA,wBAEpDoE,IAAY,EAAA,UAAA;AAAA,QAAA;AAAA,QAAC,gBAAA5D;AAAA,UAACoB;AAAA,UAAA;AAAA,YAAQ,GAAG4B;AAAA,YACtB,KAAKE;AAAA,YACL,MAAK;AAAA,YACL,UAAQ;AAAA,YACR,OAAM;AAAA,YACN,MAAK;AAAA,UAAA;AAAA,QACT;AAAA,QAEKS;AAAA,QAED,gBAAA3D,EAACoB,GAAO,EAAA,MAAK,SAAQ,UAAQ,IAAC,OAAM,UAAS,MAAK,eAAc,SAASqC,EAAQ,CAAA;AAAA,MAAA,GACrF;AAAA,IAAA,GACJ;AAAA,EAAA,EAGJ,CAAA,EACJ,CAAA;AAER;AAEA,SAAwBI,GAAO,EAAC,MAAAhG,GAAM,cAAAiG,GAAc,YAAAC,GAAY,eAAAC,KAM7D;AACC,UAAQ,IAAI,2BAA2B;AACjC,QAAA,CAACxF,GAAOyF,CAAQ,IAAI9E,GAAqBtB,KAAA,gBAAAA,EAAM,WAAU,CAAA,CAAE;AAEjE,EAAA8B,EAAU,MAAM;AACZ,IAAI9B,KAAQA,EAAK,UAAUA,EAAK,UAAUW,MACtC,QAAQ,IAAI,mBAAmBX,GAAMA,EAAK,QAAQW,CAAK,GAC9CyF,EAAApG,EAAK,UAAU,CAAA,CAAE;AAAA,EAC9B,GACD,CAACA,CAAI,CAAC;AAGH,QAAAqG,IAAmB,CAACC,MAAoB;AAEpC,UAAA/E,IAAW2B,EAAalD,CAAI;AACzB,IAAAuB,EAAA,SAASA,EAAS,OAAO;AAAA,MAAO,CAAAT,MACrCA,EAAG,MAAMwF;AAAA,IAAA,GAEbL,EAAa1E,CAAQ,GACjB2E,KAAcA,EAAW,MAAMI,KAC/BH,EAAc,MAAS;AAAA,EAC3B,GAIEI,IAAmB,CAACC,MAAoB;AAC1C,UAAMC,IAAwB9F,EAAM,IAAI,CAACC,MACjCA,EAAK,MAAM4F,EAAM,KACVA,IAEJ5F,CACV;AACD,IAAAwF,EAASK,CAAS;AAEZ,UAAAlF,IAAW2B,EAAuBlD,CAAI;AAC5C,IAAAuB,EAAS,SAASkF,GAClBR,EAAa1E,CAAQ;AAAA,EAAA,GAInB,EAAC,WAAA4D,GAAW,YAAAC,GAAY,WAAAE,GAAW,YAAAC,EAAA,IAAcmB,GAAa;AAAA,IAChE,IAAI;AAAA,IACJ,MAAM;AAAA,MACF,QAAQ;AAAA,MACR,aAAa;AAAA,IACjB;AAAA,EAAA,CACH,GAEKjB,IAAQ;AAAA,IACV,WAAWC,GAAI,UAAU,SAASJ,CAAS;AAAA,IAC3C,YAAAC;AAAA,EAAA;AAGJ,SACK,gBAAApD,EAAA,OAAA,EAAI,KAAKiD,GAAY,WAAU,UAAS,OAAAK,GAAe,GAAGN,GACtD,UAAAxE,KAAA,gBAAAA,EAAO,IAAI,CAACC,MACT,gBAAAuB;AAAA,IAAC0C;AAAA,IAAA;AAAA,MAEG,IAAIjE,EAAK;AAAA,MACT,QAAQA;AAAA,MACR,QAAQsF;AAAA,MACR,WAAWC;AAAA,MACX,cAAcI;AAAA,MACd,cAAcF;AAAA,IAAA;AAAA,IANTzF,EAAK;AAAA,EAQjB,GACL,CAAA;AAER;ACvJA,MAAM+F,KAAe,CAAC,EAAC,MAAA/F,GAAM,UAAAgB,QAGvB;AACI,QAAA+C,IAAchE,EAAM,UAAUC,CAAI;AACxC,SAAI+D,IACOC,EAAM,cAAcD,EAAY,SAAS,QAAQ;AAAA,IACpD,QAAQ/D;AAAA,IACR,UAAAgB;AAAA,EAAA,CACH,IAGEgD,EAAM;AAAA,IACT,wBAAO,OAAI,EAAA,UAAA;AAAA,MAAA;AAAA,MAAehE,EAAK;AAAA,MAAK;AAAA,IAAA,GAAe;AAAA,EAAA;AAE3D;AACA,SAAwBgG,GAAW,EAAC,MAAA5G,GAAM,cAAAiG,GAAc,YAAAC,GAAY,eAAAC,KAMjE;AACC,UAAQ,IAAI,+BAA+B;AAC3C,QAAM,CAACU,GAAcC,CAAc,IAAIxF,EAAStB,CAAI,GAC9C,CAAC+G,GAAcC,CAAc,IAAI1F,EAAS4E,CAAU,GAEpDe,IAAuB,CAACT,MAAoB;AACtC,YAAA,IAAI,wBAAwBA,CAAK,GAEzCQ,EAAeR,CAAK;AAEd,UAAAjF,IAAW2B,EAAa2D,CAAY;AAC1C,IAAAtF,EAAS,SAASA,EAAS,OAAO,IAAI,CAACT,MAC/BA,EAAG,MAAM0F,EAAM,KACRA,IAEJ1F,CACV,GACDmF,EAAa1E,CAAQ;AAAA,EAAA,GAEnB2F,IAAqB,CAAClF,MAA+C;AACjE,UAAAC,IAAwB,EAAC,GAAG4E,GAAc,CAAC7E,EAAM,OAAO,IAAI,GAAGA,EAAM,OAAO;AAClF,YAAQ,IAAIC,CAAW,GACvB6E,EAAe7E,CAAW,GAC1BgE,EAAahE,CAAW;AAAA,EAAA,GAGtBkF,IAAe,MAAM;AACvB,IAAAhB,EAAc,MAAS;AAAA,EAAA;AA4B3B,MAzBQ,QAAA,IAAI,cAAcY,CAAY,GAEtCjF,EAAU,MAAM;AACZ,IAAAkF,EAAed,CAAU;AAAA,EAAA,GAC1B,CAACA,CAAU,CAAC,GAEfpE,EAAU,MAAM;AACZ,IAAAgF,EAAe9G,CAAI;AAAA,EAAA,GACpB,CAACA,CAAI,CAAC,GAiBL+G,GAAc;AACR,UAAAnG,IAAOD,EAAM,UAAUoG,CAAY;AAEzC,QAAInG,GAAK;AACL,YAAMwG,IAAgBxG,EAAK;AAC3B,aAEQ,gBAAAuB,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,qBAGf,UAAA;AAAA,QAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,2CACX,UAAA;AAAA,UAAC,gBAAAA,EAAA,OAAA,EAAI,WAAU,uCACX,UAAA;AAAA,YAAA,gBAAAF,EAAC,OAAI,EAAA,WAAU,kBACf,UAAA,gBAAAA,EAACiF,IAAa,CAAA,GAClB;AAAA,8BACC,OACG,EAAA,UAAA,gBAAAjF,EAAC,MAAI,EAAA,UAAAvB,EAAK,QAAQ,CAAA,GACtB;AAAA,UAAA,GACA;AAAA,UAEC,gBAAAuB,EAACoB,KAAO,SAAS4D,GAAc,MAAK,SAAQ,UAAU,IAAM,MAAK,cAAa,CAAA;AAAA,QAAA,GACnF;AAAA,QAEC,gBAAAhF,EAAAwE,IAAA,EAAa,MAAMI,GAAc,UAAUE,GAAsB;AAAA,MAAA,EAGlE,CAAA,EACJ,CAAA;AAAA,IAER;AACA,WAAOrC,EAAM;AAAA,MACT,wBAAO,OAAI,EAAA,UAAA;AAAA,QAAA;AAAA,QAAemC,EAAa;AAAA,QAAK;AAAA,MAAA,GAAe;AAAA,IAAA;AAAA,EAC/D;AAGA,WAEQ,gBAAA5E,EAAAC,GAAA,EAAA,UAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,cACX,UAAA;AAAA,MAAC,gBAAAF,EAAA,OAAA,EAAI,WAAU,6BACX,UAAA,gBAAAA,EAAC,SACG,UAAC,gBAAAA,EAAA,MAAA,EAAG,UAAa,gBAAA,CAAA,EACrB,CAAA,GACJ;AAAA,MACC,gBAAAA,EAAAO,GAAA,EAAU,aAAa,GACpB,4BAACC,GAAa,EAAA,QAAO,WACjB,UAAA,gBAAAR,EAAC,SAAI,WAAU,oCACX,UAAC,gBAAAE,EAAA,OAAA,EAAI,WAAU,0BACX,UAAA;AAAA,QAAC,gBAAAF,EAAA,SAAA,EAAM,SAAQ,SAAQ,UAAU,cAAA;AAAA,QACjC,gBAAAA;AAAA,UAACG;AAAA,UAAA;AAAA,YACG,UAAU4E;AAAA,YACV,MAAM;AAAA,YACN,OAAOL,EAAa,SAAS;AAAA,YAC7B,WAAW;AAAA,UAAA;AAAA,QACf;AAAA,MACJ,EAAA,CAAA,EACJ,CAAA,KAX+B,SAYnC,EACJ,CAAA;AAAA,IAAA,EACJ,CAAA,EACJ,CAAA;AAII;AC7IA,SAAAQ,GAAa,EAAC,MAAAzG,KAE3B;AACC,QAAMwG,IAAgBxG,EAAK;AACpB,SAAA,gBAAAuB,EAAAC,GAAA,EACH,4BAAC,WAAQ,EAAA,WAAW,iBAChB,UAAC,gBAAAC,EAAA,OAAA,EAAI,WAAU,kCACX,UAAA;AAAA,IAAA,gBAAAF,EAAC,OAAI,EAAA,WAAU,kBACX,UAAA,gBAAAA,EAACiF,IAAa,CAAA,GAClB;AAAA,sBACC,OACG,EAAA,UAAA;AAAA,MAAA,gBAAAjF,EAAC,OAAI,EAAA,WAAU,cAAc,UAAAvB,EAAK,SAAQ;AAAA,MACzC,gBAAAuB,EAAA,OAAA,EAAI,WAAU,aAAa,YAAK,aAAY;AAAA,IAAA,GACjD;AAAA,EAAA,GACJ,GACJ,EACJ,CAAA;AACJ;AAEA,SAASmF,GAAsB,EAAC,MAAA1G,KAE7B;AAEO,QAAAsB,IAAKqF,GAAO9F,EAAA,CAAQ,GAEpB,EAAC,YAAAyD,GAAY,WAAAC,GAAW,YAAAC,EAAA,IAAcoC,GAAa;AAAA,IACrD,IAAItF,EAAG;AAAA,IACP,MAAM;AAAA,MACF,MAAAtB;AAAA,MACA,aAAa;AAAA,IACjB;AAAA,EAAA,CACH;AAED,SACK,gBAAAuB,EAAA,OAAA,EAAI,KAAKiD,GAAY,WAAU,iBAAiB,GAAGF,GAAa,GAAGC,GAEhE,UAAC,gBAAAhD,EAAAkF,IAAA,EAAa,MAAAzG,GAAW,EAC7B,CAAA;AAER;AAEA,SAAwB6G,GAAQ,EAAC,MAAAzH,GAAM,cAAAiG,GAAc,YAAAC,GAAY,eAAAC,KAK9D;AACC,QAAM,CAACuB,GAAYC,CAAa,IAAIrG,EAAiB,CAAC,GAQhDsG,IAA2C,CAAA;AAC3C,EAAAjH,EAAA,IAAI,CAACC,MAAS;;AACV,UAAAiH,MAAIC,IAAAlH,EAAK,UAAL,gBAAAkH,EAAY,UAAS;AAC/B,IAAK,OAAO,KAAKF,CAAU,EAAE,SAASC,CAAC,MACnCD,EAAWC,CAAC,IAAI;AAAA,MACZ,SAAOE,IAAAnH,EAAK,UAAL,gBAAAmH,EAAY,UAAS;AAAA,MAC5B,OAAO,CAAC;AAAA,IAAA,IAGhBH,EAAWC,CAAC,EAAE,MAAS,KAAKjH,CAAI;AAAA,EAAA,CACnC;AAEK,QAAAoH,IAAkB,CAAChH,MAAkB;AACvC,IAAA2G,EAAc3G,CAAK;AAAA,EAAA;AAIvB,SAEQ,gBAAAmB,EAAAC,GAAA,EAAA,UAAA,gBAAAC;AAAA,IAAC4F;AAAA,IAAA;AAAA,MACG,aAAaP;AAAA,MACb,aAAa,CAAC5E,MAAMkF,EAAgBlF,EAAE,KAAK;AAAA,MAC3C,WAAU;AAAA,MAEV,UAAA;AAAA,QAAC,gBAAAT,EAAA6F,GAAA,EAAS,QAAO,SAC0B,UAAA;AAAA,UAAA;AAAA,UAAkD;AAAA,UAAuB;AAAA,UAAiC;AAAA,UAAqC;AAAA,UAA0C;AAAA,UAAe;AAAA,UAE/O,gBAAA/F,EAACO,GAAU,EAAA,aAAa,GACnB,UAAA,OAAO,KAAKkF,CAAU,EAAE,IAAI,CAACC,MAErB,gBAAA1F,EAAAQ,GAAA,EAAa,QAAQiF,EAAWC,CAAC,EAAE,OAC/B,UAAAD,EAAWC,CAAC,EAAE,MAAM,IAAI,CAACjH,wBACb0G,IAAmD,EAAA,MAAA1G,EAAA,GAAxB,WAAWA,EAAK,IAAI,EAAe,CAC1E,KAH2CiH,CAIhD,CAEP,GAEL;AAAA,QAAA,GAEJ;AAAA,QACA,gBAAAxF,EAAC6F,GAAS,EAAA,QAAO,SAAQ,UAAA;AAAA,UAAA;AAAA,UACd,KAAK,UAAUlI,CAAI;AAAA,QAAA,GAC9B;AAAA,MAAA;AAAA,IAAA;AAAA,EAIR,EAAA,CAAA;AAER;ACjFA,SAASmI,EAAQC,GAA4B;;AAClC,WAAAN,IAAAM,KAAA,gBAAAA,EAAM,SAAN,gBAAAN,EAAY,YAAW;AAClC;AAEA,IAAIO,IAAgB;AAEb,MAAMC,KAAc,CAAC,EAAC,QAAA3G,GAAQ,UAAAC,QAG/B;AACF,EAAAyG,IAAgBA,IAAgB,GACxB,QAAA,IAAI,sBAAsBA,GAAe,oBAAoB;AAErE,QAAM,EAAC,MAAArI,GAAM,SAAAuI,EAAO,IAAIpH,GAAUQ,CAAM,GAClC,CAACuE,GAAYC,CAAa,IAAI7E,EAA+B,MAAS;AAE5E,EAAAQ,EAAU,MAAM;AACZ,IAAIH,KACA4G,EAAQ5G,CAAM;AAAA,EAClB,GACD,CAACA,CAAM,CAAC,GAEXG,EAAU,MAAM;AACZ,IAAI9B,KACA4B,EAAS5B,CAAI;AAAA,EACjB,GACD,CAACA,CAAI,CAAC;AAGT,QAAMwI,IAAUC;AAAA,IACZC,EAAUC,EAAa;AAAA,IACvBD,EAAUE,IAAgB;AAAA,MACtB,kBAAkBC;AAAA,IAAA,CACrB;AAAA,EAAA,GAGC,CAACC,GAAoBC,CAAqB,IAAIzH,EAAS,GACvD,CAAC0H,GAAaC,CAAc,IAAI3H,EAAS,GAEzC4H,IAAU,MAAM;AAClB,IAAAH,EAAsB,MAAS,GAC/BE,EAAe,MAAS;AAAA,EAAA,GAGtBE,IAAkB,CAACrG,MAAsB;AACrC,UAAA,EAAC,QAAAgC,EAAU,IAAAhC,GACXsG,IAAajB,EAAQrD,CAAM;AAEzB,YAAA,IAAI,mBAAmBsE,CAAU;AACnC,UAAA,EAAC,MAAAxI,EAAQ,IAAAwI;AACf,QAAIA,EAAW,aAAa;AAExB,YAAMC,IAAWzI,EAAK;AACtB,MAAAyI,EAAS,KAAK5H,KACdb,EAAK,KAAKyI,EAAS,IACnB,QAAQ,IAAI,mBAAmB,WAAWzI,GAAMyI,CAAQ,GACxD,QAAQ,IAAIA,CAAQ,GACpBN,EAAsBnI,CAAI,GAC1BuF,EAAciD,EAAW,IAAI;AAAA,IAAA;AAE7B,MAAAH,EAAeG,EAAW,IAAI;AAAA,EAClC,GAKEE,IAAiB,CAACxG,MAAqB;AACnC,UAAA,EAAC,QAAAgC,GAAQ,MAAAyE,EAAQ,IAAAzG;AACf,YAAA,IAAI,QAAQyG,CAAI;AAClB,UAAAH,IAAajB,EAAQrD,CAAM,GAC3B0E,IAAWrB,EAAQoB,CAAI;AAE7B,QAAIH,EAAW;AAGP,UADJ,QAAQ,IAAI,kBAAkB,eAAeA,EAAW,KAAK,EAAE,GAC3DpJ,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAOwI,EAAW,KAAK,EAAE,KAAK,IAAI;AACvE,gBAAQ,IAAI,kBAAkB,YAAYA,EAAW,KAAK,gBAAgBI,CAAQ,GAClFxJ,EAAK,OAAO,KAAKoJ,EAAW,KAAK,cAAc;AACzC,cAAAK,IAAYzJ,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAOwI,EAAW,KAAK,EAAE,GAC1EM,IAAY1J,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAO4I,EAAS,EAAE;AACzE,QAAAxJ,EAAK,SAAS2J,EAAU3J,EAAK,QAAQyJ,GAAWC,CAAS,GACzDnB,EAAQvI,CAAI;AAAA,MAAA,WACL,CAACuJ;AACA,gBAAA,IAAI,kBAAkB,SAASC,CAAQ,GAC1CxJ,EAAA,SAASA,EAAK,OAAO,OAAO,CAAC4J,MAAMA,EAAE,OAAOR,EAAW,KAAK,EAAE,GACnEb,EAAQvI,CAAI;AAAA,WACT;AACK,gBAAA,IAAI,kBAAkB,QAAQwJ,CAAQ;AACxC,cAAAC,IAAYzJ,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAOwI,EAAW,KAAK,EAAE,GAC1EM,IAAY1J,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAO4I,EAAS,EAAE;AACzE,gBAAQ,IAAI,aAAaxJ,EAAK,QAAQyJ,GAAWC,GAAWF,GAAUJ,CAAU,GAChFpJ,EAAK,SAAS2J,EAAU3J,EAAK,QAAQyJ,GAAWC,CAAS,GACzDnB,EAAQvI,CAAI,GACJ,QAAA,IAAI,iBAAiBA,EAAK,QAAQA,EAAK,OAAO,IAAI,CAAC4J,MAAMA,EAAE,EAAE,CAAC;AAAA,MAC1E;AAAA;AAIkB,MAAA5J,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAOwI,EAAW,KAAK,EAAE,GAC9DpJ,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAO4I,EAAS,EAAE;AAAA,EAO7E,GAKEK,IAAgB,CAAC/G,MAAoB;AACjC,UAAA,EAAC,QAAAgC,GAAQ,MAAAyE,EAAQ,IAAAzG,GAEjBsG,IAAajB,EAAQrD,CAAM,GAC3B0E,IAAWrB,EAAQoB,CAAI;AACrB,YAAA,IAAI,iBAAiBH,GAAYI,CAAQ,GAGzC,QAAA,IAAI,iBAAiBxJ,EAAK,MAAM;AAClC,UAAAyJ,IAAYzJ,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAOwI,EAAW,KAAK,EAAE,GAC1EM,IAAY1J,EAAK,OAAO,UAAU,CAACY,MAASA,EAAK,OAAO4I,EAAS,EAAE;AACzE,IAAIC,KAAaC,MACb1J,EAAK,SAAS2J,EAAU3J,EAAK,QAAQyJ,GAAWC,CAAS,GACjD,QAAA,IAAI,gCAAgCD,GAAWC,CAAS,GAChEnB,EAAQvI,CAAI,IAEhBmG,EAAciD,EAAW,IAAI,GACrBF;EAAA,GAoBNY,IAAY;AAAA,IACd,MAAA9J;AAAA,IACA,cAAcuI;AAAA,IACd,YAAArC;AAAA,IACA,eAAAC;AAAA,EAAA;AAIJ,SADA,QAAQ,IAAIoC,CAAO,GACfvI,IAGQ,gBAAAmC,EAAAC,GAAA,EAAA,UAAA,gBAAAD,EAAC,OAAI,EAAA,WAAU,gBACX,UAAA,gBAAAE;AAAA,IAAC0H;AAAA,IAAA;AAAA,MACG,SAAAvB;AAAA,MACA,aAAaW;AAAA,MACb,YAAYG;AAAA,MACZ,WAAWO;AAAA,MACX,oBAAoBG;AAAA,MACpB,YAAU;AAAA,MAEV,UAAA;AAAA,QAAA,gBAAA7H,EAAC,SAAI,WAAU,gBACX,4BAACsF,IAAQ,EAAA,GAAGqC,GAAW,EAC3B,CAAA;AAAA,QACA,gBAAA3H,EAAC,OAAI,EAAA,WAAU,eACX,UAAA,gBAAAA;AAAA,UAAC8H;AAAA,UAAA;AAAA,YACG,UAAUC;AAAA,YACV,OAAOlK,EAAK,OAAO,IAAI,CAAC4J,MAAMA,EAAE,EAAE;AAAA,YAElC,UAAA,gBAAAzH,EAAC6D,IAAQ,EAAA,GAAG8D,EAAU,CAAA;AAAA,UAAA;AAAA,QAAA,GAE9B;AAAA,QACA,gBAAA3H,EAAC,SAAI,WAAU,mBACZ,4BAACyE,IAAY,EAAA,GAAGkD,GAAW,EAC9B,CAAA;AAAA,QAEA,gBAAAzH,EAAC8H,IAAY,EAAA,eAAe,MACvB,UAAA;AAAA,UAAArB,IACI,gBAAA3G,EAAAkF,IAAA,EAAa,MAAMyB,EAAmB,CAAA,IACvC;AAAA,UAAK;AAAA,UAAEE,IAAc,gBAAA7G;AAAA,YAACuC;AAAA,YAAA;AAAA,cAC1B,MAAMsE;AAAA,cAAa,UAAU,MAAM;AAAA,cACvC;AAAA,YAAA;AAAA,UAAA,IACK;AAAA,QAAA,GACL;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA,EAER,CAAA,EAEJ,CAAA,IAKJ,gBAAA7G,EAAAC,GAAA,EAAA,UAAA,gBAAAD,EAAC,OAAI,EAAA,UAAA,yBAAqB,EAC1B,CAAA;AAGR;"}